/***************************************************
 * PEG Parser - Generated By YAPP Parser Generator *
 ***************************************************/

package org.uggeri.yapp.runtime.java.test;

import org.uggeri.yapp.runtime.java.node.Node;
import org.uggeri.yapp.runtime.java.node.NodeVisitor;

public abstract class JavaVisitor implements NodeVisitor {

   public void enterCompilationUnit(Node node) {}
   public void exitCompilationUnit(Node node) {}

   public void enterPackageDeclaration(Node node) {}
   public void exitPackageDeclaration(Node node) {}

   public void enterImportDeclaration(Node node) {}
   public void exitImportDeclaration(Node node) {}

   public void enterTypeDeclaration(Node node) {}
   public void exitTypeDeclaration(Node node) {}

   public void enterAnnotations(Node node) {}
   public void exitAnnotations(Node node) {}

   public void enterAnnotation(Node node) {}
   public void exitAnnotation(Node node) {}

   public void enterQualifiedIdentifier(Node node) {}
   public void exitQualifiedIdentifier(Node node) {}

   public void enterDotStar(Node node) {}
   public void exitDotStar(Node node) {}

   public void enterModifiers(Node node) {}
   public void exitModifiers(Node node) {}

   public void enterModifier(Node node) {}
   public void exitModifier(Node node) {}

   public void enterClassDeclaration(Node node) {}
   public void exitClassDeclaration(Node node) {}

   public void enterEnumDeclaration(Node node) {}
   public void exitEnumDeclaration(Node node) {}

   public void enterInterfaceDeclaration(Node node) {}
   public void exitInterfaceDeclaration(Node node) {}

   public void enterAnnotationDeclaration(Node node) {}
   public void exitAnnotationDeclaration(Node node) {}

   public void enterExtends(Node node) {}
   public void exitExtends(Node node) {}

   public void enterQualifiedClassName(Node node) {}
   public void exitQualifiedClassName(Node node) {}

   public void enterImplements(Node node) {}
   public void exitImplements(Node node) {}

   public void enterClassTypeList(Node node) {}
   public void exitClassTypeList(Node node) {}

   public void enterIdentifier(Node node) {}
   public void exitIdentifier(Node node) {}

   public void enterTypeParameters(Node node) {}
   public void exitTypeParameters(Node node) {}

   public void enterClassBody(Node node) {}
   public void exitClassBody(Node node) {}

   public void enterClassBodyDeclaration(Node node) {}
   public void exitClassBodyDeclaration(Node node) {}

   public void enterStaticBlock(Node node) {}
   public void exitStaticBlock(Node node) {}

   public void enterBlock(Node node) {}
   public void exitBlock(Node node) {}

   public void enterMethodDeclaration(Node node) {}
   public void exitMethodDeclaration(Node node) {}

   public void enterConstructorDeclaration(Node node) {}
   public void exitConstructorDeclaration(Node node) {}

   public void enterFieldsDeclarations(Node node) {}
   public void exitFieldsDeclarations(Node node) {}

   public void enterType(Node node) {}
   public void exitType(Node node) {}

   public void enterVariableDeclarations(Node node) {}
   public void exitVariableDeclarations(Node node) {}

   public void enterThrows(Node node) {}
   public void exitThrows(Node node) {}

   public void enterEmptyBody(Node node) {}
   public void exitEmptyBody(Node node) {}

   public void enterReturnType(Node node) {}
   public void exitReturnType(Node node) {}

   public void enterMethodSignature(Node node) {}
   public void exitMethodSignature(Node node) {}

   public void enterParametersDeclarations(Node node) {}
   public void exitParametersDeclarations(Node node) {}

   public void enterDimensions(Node node) {}
   public void exitDimensions(Node node) {}

   public void enterInterfaceBody(Node node) {}
   public void exitInterfaceBody(Node node) {}

   public void enterInterfaceBodyDeclaration(Node node) {}
   public void exitInterfaceBodyDeclaration(Node node) {}

   public void enterInterfaceMethod(Node node) {}
   public void exitInterfaceMethod(Node node) {}

   public void enterConstantsDeclarations(Node node) {}
   public void exitConstantsDeclarations(Node node) {}

   public void enterConstantsDeclarationsList(Node node) {}
   public void exitConstantsDeclarationsList(Node node) {}

   public void enterConstantDeclaration(Node node) {}
   public void exitConstantDeclaration(Node node) {}

   public void enterVariableInitializer(Node node) {}
   public void exitVariableInitializer(Node node) {}

   public void enterEnumBody(Node node) {}
   public void exitEnumBody(Node node) {}

   public void enterEnumConstants(Node node) {}
   public void exitEnumConstants(Node node) {}

   public void enterEnumBodyDeclarations(Node node) {}
   public void exitEnumBodyDeclarations(Node node) {}

   public void enterEnumConstant(Node node) {}
   public void exitEnumConstant(Node node) {}

   public void enterArguments(Node node) {}
   public void exitArguments(Node node) {}

   public void enterFinal(Node node) {}
   public void exitFinal(Node node) {}

   public void enterVariableModifiers(Node node) {}
   public void exitVariableModifiers(Node node) {}

   public void enterLocalVariableDeclarationStatement(Node node) {}
   public void exitLocalVariableDeclarationStatement(Node node) {}

   public void enterVariableDeclaration(Node node) {}
   public void exitVariableDeclaration(Node node) {}

   public void enterVariableInitialization(Node node) {}
   public void exitVariableInitialization(Node node) {}

   public void enterParametersDeclarationList(Node node) {}
   public void exitParametersDeclarationList(Node node) {}

   public void enterParameterDeclaration(Node node) {}
   public void exitParameterDeclaration(Node node) {}

   public void enterParameterVariableDeclaration(Node node) {}
   public void exitParameterVariableDeclaration(Node node) {}

   public void enterBlockStatements(Node node) {}
   public void exitBlockStatements(Node node) {}

   public void enterBlockStatement(Node node) {}
   public void exitBlockStatement(Node node) {}

   public void enterStatement(Node node) {}
   public void exitStatement(Node node) {}

   public void enterAssertStatement(Node node) {}
   public void exitAssertStatement(Node node) {}

   public void enterIfStatement(Node node) {}
   public void exitIfStatement(Node node) {}

   public void enterForStatement(Node node) {}
   public void exitForStatement(Node node) {}

   public void enterForIterableStatement(Node node) {}
   public void exitForIterableStatement(Node node) {}

   public void enterWhileStatement(Node node) {}
   public void exitWhileStatement(Node node) {}

   public void enterDoWhileStatement(Node node) {}
   public void exitDoWhileStatement(Node node) {}

   public void enterTryCatchStatement(Node node) {}
   public void exitTryCatchStatement(Node node) {}

   public void enterResourceSpecification(Node node) {}
   public void exitResourceSpecification(Node node) {}

   public void enterResources(Node node) {}
   public void exitResources(Node node) {}

   public void enterResource(Node node) {}
   public void exitResource(Node node) {}

   public void enterSwitchStatement(Node node) {}
   public void exitSwitchStatement(Node node) {}

   public void enterSynchronizedStatement(Node node) {}
   public void exitSynchronizedStatement(Node node) {}

   public void enterReturnStatement(Node node) {}
   public void exitReturnStatement(Node node) {}

   public void enterThrowStatement(Node node) {}
   public void exitThrowStatement(Node node) {}

   public void enterBreakStatement(Node node) {}
   public void exitBreakStatement(Node node) {}

   public void enterContinueStatement(Node node) {}
   public void exitContinueStatement(Node node) {}

   public void enterIdentifiedStatement(Node node) {}
   public void exitIdentifiedStatement(Node node) {}

   public void enterStatementExpression(Node node) {}
   public void exitStatementExpression(Node node) {}

   public void enterElseStatement(Node node) {}
   public void exitElseStatement(Node node) {}

   public void enterParExpression(Node node) {}
   public void exitParExpression(Node node) {}

   public void enterRecursiveExpression(Node node) {}
   public void exitRecursiveExpression(Node node) {}

   public void enterExpression(Node node) {}
   public void exitExpression(Node node) {}

   public void enterForInit(Node node) {}
   public void exitForInit(Node node) {}

   public void enterForUpdate(Node node) {}
   public void exitForUpdate(Node node) {}

   public void enterCatchType(Node node) {}
   public void exitCatchType(Node node) {}

   public void enterCatchParameter(Node node) {}
   public void exitCatchParameter(Node node) {}

   public void enterCatch(Node node) {}
   public void exitCatch(Node node) {}

   public void enterFinally(Node node) {}
   public void exitFinally(Node node) {}

   public void enterSwitchBlockStatementGroups(Node node) {}
   public void exitSwitchBlockStatementGroups(Node node) {}

   public void enterSwitchBlockStatementGroup(Node node) {}
   public void exitSwitchBlockStatementGroup(Node node) {}

   public void enterSwitchLabel(Node node) {}
   public void exitSwitchLabel(Node node) {}

   public void enterEnumConstantName(Node node) {}
   public void exitEnumConstantName(Node node) {}

   public void enterForInitVariables(Node node) {}
   public void exitForInitVariables(Node node) {}

   public void enterForInitExpressions(Node node) {}
   public void exitForInitExpressions(Node node) {}

   public void enterAssignmentExpression(Node node) {}
   public void exitAssignmentExpression(Node node) {}

   public void enterConditionalExpression(Node node) {}
   public void exitConditionalExpression(Node node) {}

   public void enterAssignmentOperator(Node node) {}
   public void exitAssignmentOperator(Node node) {}

   public void enterTernaryExpression(Node node) {}
   public void exitTernaryExpression(Node node) {}

   public void enterConditionalOrExpression(Node node) {}
   public void exitConditionalOrExpression(Node node) {}

   public void enterOrExpression(Node node) {}
   public void exitOrExpression(Node node) {}

   public void enterConditionalAndExpression(Node node) {}
   public void exitConditionalAndExpression(Node node) {}

   public void enterAndExpression(Node node) {}
   public void exitAndExpression(Node node) {}

   public void enterOptionalBitOrExpression(Node node) {}
   public void exitOptionalBitOrExpression(Node node) {}

   public void enterBitOrExpression(Node node) {}
   public void exitBitOrExpression(Node node) {}

   public void enterOptionalBitXOrExpression(Node node) {}
   public void exitOptionalBitXOrExpression(Node node) {}

   public void enterBitXOrExpression(Node node) {}
   public void exitBitXOrExpression(Node node) {}

   public void enterOptionalBitAndExpression(Node node) {}
   public void exitOptionalBitAndExpression(Node node) {}

   public void enterBitAndExpression(Node node) {}
   public void exitBitAndExpression(Node node) {}

   public void enterOptionalRelationalExpression(Node node) {}
   public void exitOptionalRelationalExpression(Node node) {}

   public void enterRelationalExpression(Node node) {}
   public void exitRelationalExpression(Node node) {}

   public void enterOptionalInstanceOfExpression(Node node) {}
   public void exitOptionalInstanceOfExpression(Node node) {}

   public void enterInstanceOfExpression(Node node) {}
   public void exitInstanceOfExpression(Node node) {}

   public void enterOptionalAdditiveExpression(Node node) {}
   public void exitOptionalAdditiveExpression(Node node) {}

   public void enterReferenceType(Node node) {}
   public void exitReferenceType(Node node) {}

   public void enterAdditiveExpression(Node node) {}
   public void exitAdditiveExpression(Node node) {}

   public void enterOptionalMultiplicativeExpression(Node node) {}
   public void exitOptionalMultiplicativeExpression(Node node) {}

   public void enterMultiplicativeExpression(Node node) {}
   public void exitMultiplicativeExpression(Node node) {}

   public void enterOptionalShiftExpression(Node node) {}
   public void exitOptionalShiftExpression(Node node) {}

   public void enterShiftExpression(Node node) {}
   public void exitShiftExpression(Node node) {}

   public void enterUnaryExpression(Node node) {}
   public void exitUnaryExpression(Node node) {}

   public void enterPrefixedExpression(Node node) {}
   public void exitPrefixedExpression(Node node) {}

   public void enterCastExpression(Node node) {}
   public void exitCastExpression(Node node) {}

   public void enterPostfixedExpression(Node node) {}
   public void exitPostfixedExpression(Node node) {}

   public void enterPrefixOp(Node node) {}
   public void exitPrefixOp(Node node) {}

   public void enterPostFixOp(Node node) {}
   public void exitPostFixOp(Node node) {}

   public void enterPrimary(Node node) {}
   public void exitPrimary(Node node) {}

   public void enterQualifiedExpression(Node node) {}
   public void exitQualifiedExpression(Node node) {}

   public void enterArrayAccess(Node node) {}
   public void exitArrayAccess(Node node) {}

   public void enterAtomic(Node node) {}
   public void exitAtomic(Node node) {}

   public void enterClassTypeReference(Node node) {}
   public void exitClassTypeReference(Node node) {}

   public void enterLiteral(Node node) {}
   public void exitLiteral(Node node) {}

   public void enterBasicTypeClassReference(Node node) {}
   public void exitBasicTypeClassReference(Node node) {}

   public void enterVoidClassReference(Node node) {}
   public void exitVoidClassReference(Node node) {}

   public void enterThisMethodCall(Node node) {}
   public void exitThisMethodCall(Node node) {}

   public void enterThis(Node node) {}
   public void exitThis(Node node) {}

   public void enterSuper(Node node) {}
   public void exitSuper(Node node) {}

   public void enterSuperMethodCall(Node node) {}
   public void exitSuperMethodCall(Node node) {}

   public void enterSuperConstructorCall(Node node) {}
   public void exitSuperConstructorCall(Node node) {}

   public void enterSuperFieldAccess(Node node) {}
   public void exitSuperFieldAccess(Node node) {}

   public void enterNew(Node node) {}
   public void exitNew(Node node) {}

   public void enterClassCreator(Node node) {}
   public void exitClassCreator(Node node) {}

   public void enterArrayCreator(Node node) {}
   public void exitArrayCreator(Node node) {}

   public void enterMethodCall(Node node) {}
   public void exitMethodCall(Node node) {}

   public void enterArrayIndex(Node node) {}
   public void exitArrayIndex(Node node) {}

   public void enterDimExpr(Node node) {}
   public void exitDimExpr(Node node) {}

   public void enterBasicType(Node node) {}
   public void exitBasicType(Node node) {}

   public void enterNonWildcardTypeArguments(Node node) {}
   public void exitNonWildcardTypeArguments(Node node) {}

   public void enterCreatedName(Node node) {}
   public void exitCreatedName(Node node) {}

   public void enterInitializedArrayCreator(Node node) {}
   public void exitInitializedArrayCreator(Node node) {}

   public void enterEmptyArrayCreator(Node node) {}
   public void exitEmptyArrayCreator(Node node) {}

   public void enterArrayType(Node node) {}
   public void exitArrayType(Node node) {}

   public void enterDim(Node node) {}
   public void exitDim(Node node) {}

   public void enterArrayInitializer(Node node) {}
   public void exitArrayInitializer(Node node) {}

   public void enterTypedName(Node node) {}
   public void exitTypedName(Node node) {}

   public void enterTypeName(Node node) {}
   public void exitTypeName(Node node) {}

   public void enterArray(Node node) {}
   public void exitArray(Node node) {}

   public void enterBasicTypeArray(Node node) {}
   public void exitBasicTypeArray(Node node) {}

   public void enterQualifiedClassNameArray(Node node) {}
   public void exitQualifiedClassNameArray(Node node) {}

   public void enterClassName(Node node) {}
   public void exitClassName(Node node) {}

   public void enterTypedClassName(Node node) {}
   public void exitTypedClassName(Node node) {}

   public void enterTypeArguments(Node node) {}
   public void exitTypeArguments(Node node) {}

   public void enterTypeArgument(Node node) {}
   public void exitTypeArgument(Node node) {}

   public void enterQueryType(Node node) {}
   public void exitQueryType(Node node) {}

   public void enterTypeParameter(Node node) {}
   public void exitTypeParameter(Node node) {}

   public void enterBound(Node node) {}
   public void exitBound(Node node) {}

   public void enterAnnotationTypeBody(Node node) {}
   public void exitAnnotationTypeBody(Node node) {}

   public void enterAnnotationTypeElementDeclaration(Node node) {}
   public void exitAnnotationTypeElementDeclaration(Node node) {}

   public void enterAnnotationMethod(Node node) {}
   public void exitAnnotationMethod(Node node) {}

   public void enterAnnotationsConstants(Node node) {}
   public void exitAnnotationsConstants(Node node) {}

   public void enterDefaultValue(Node node) {}
   public void exitDefaultValue(Node node) {}

   public void enterElementValue(Node node) {}
   public void exitElementValue(Node node) {}

   public void enterAnnotationParameters(Node node) {}
   public void exitAnnotationParameters(Node node) {}

   public void enterNormalAnnotationRest(Node node) {}
   public void exitNormalAnnotationRest(Node node) {}

   public void enterSingleElementAnnotationRest(Node node) {}
   public void exitSingleElementAnnotationRest(Node node) {}

   public void enterElementValuePairs(Node node) {}
   public void exitElementValuePairs(Node node) {}

   public void enterElementValuePair(Node node) {}
   public void exitElementValuePair(Node node) {}

   public void enterElementValueArrayInitializer(Node node) {}
   public void exitElementValueArrayInitializer(Node node) {}

   public void enterElementValues(Node node) {}
   public void exitElementValues(Node node) {}

   public void enterTestNoAlpha(Node node) {}
   public void exitTestNoAlpha(Node node) {}

   public void enterSpacing(Node node) {}
   public void exitSpacing(Node node) {}

   public void enterSpaces(Node node) {}
   public void exitSpaces(Node node) {}

   public void enterBlockComment(Node node) {}
   public void exitBlockComment(Node node) {}

   public void enterNewLine(Node node) {}
   public void exitNewLine(Node node) {}

   public void enterLineComment(Node node) {}
   public void exitLineComment(Node node) {}

   public void enterFloatLiteral(Node node) {}
   public void exitFloatLiteral(Node node) {}

   public void enterLongLiteral(Node node) {}
   public void exitLongLiteral(Node node) {}

   public void enterIntegerLiteral(Node node) {}
   public void exitIntegerLiteral(Node node) {}

   public void enterCharLiteral(Node node) {}
   public void exitCharLiteral(Node node) {}

   public void enterStringLiteral(Node node) {}
   public void exitStringLiteral(Node node) {}

   public void enterTrue(Node node) {}
   public void exitTrue(Node node) {}

   public void enterFalse(Node node) {}
   public void exitFalse(Node node) {}

   public void enterNull(Node node) {}
   public void exitNull(Node node) {}

   public void enterHexFloat(Node node) {}
   public void exitHexFloat(Node node) {}

   public void enterDecimalFloat(Node node) {}
   public void exitDecimalFloat(Node node) {}

   public void enterSemicolon(Node node) {}
   public void exitSemicolon(Node node) {}}
