/***************************************************
 * PEG Parser - Generated By YAPP Parser Generator *
 ***************************************************/

package org.uggeri.yapp.runtime.java.test;

import org.uggeri.yapp.runtime.java.node.Node;
import org.uggeri.yapp.runtime.java.node.NodeVisitor;

public abstract class HarbourPPVisitor implements NodeVisitor {

   public void enterPreProcessor(Node node) {}
   public void exitPreProcessor(Node node) {}

   public void enterStatements(Node node) {}
   public void exitStatements(Node node) {}

   public void enterIgnore(Node node) {}
   public void exitIgnore(Node node) {}

   public void enterWhitespace(Node node) {}
   public void exitWhitespace(Node node) {}

   public void enterBlockComment(Node node) {}
   public void exitBlockComment(Node node) {}

   public void enterLineComment(Node node) {}
   public void exitLineComment(Node node) {}

   public void enterContinueNL(Node node) {}
   public void exitContinueNL(Node node) {}

   public void enterSpacing(Node node) {}
   public void exitSpacing(Node node) {}

   public void enterStatement(Node node) {}
   public void exitStatement(Node node) {}

   public void enterDirectiveStatement(Node node) {}
   public void exitDirectiveStatement(Node node) {}

   public void enterEmptyStatement(Node node) {}
   public void exitEmptyStatement(Node node) {}

   public void enterAnyStatement(Node node) {}
   public void exitAnyStatement(Node node) {}

   public void enterEndStmt(Node node) {}
   public void exitEndStmt(Node node) {}

   public void enterNewLine(Node node) {}
   public void exitNewLine(Node node) {}

   public void enterAloneLineComment(Node node) {}
   public void exitAloneLineComment(Node node) {}

   public void enterAnyRules(Node node) {}
   public void exitAnyRules(Node node) {}

   public void enterDirectiveMark(Node node) {}
   public void exitDirectiveMark(Node node) {}

   public void enterDefineDirective(Node node) {}
   public void exitDefineDirective(Node node) {}

   public void enterStdOutDirective(Node node) {}
   public void exitStdOutDirective(Node node) {}

   public void enterCommandDirective(Node node) {}
   public void exitCommandDirective(Node node) {}

   public void enterXCommandDirective(Node node) {}
   public void exitXCommandDirective(Node node) {}

   public void enterYCommandDirective(Node node) {}
   public void exitYCommandDirective(Node node) {}

   public void enterTranslateDirective(Node node) {}
   public void exitTranslateDirective(Node node) {}

   public void enterXTranslateDirective(Node node) {}
   public void exitXTranslateDirective(Node node) {}

   public void enterYTranslateDirective(Node node) {}
   public void exitYTranslateDirective(Node node) {}

   public void enterIfDefDirective(Node node) {}
   public void exitIfDefDirective(Node node) {}

   public void enterIfNDefDirective(Node node) {}
   public void exitIfNDefDirective(Node node) {}

   public void enterElseDirective(Node node) {}
   public void exitElseDirective(Node node) {}

   public void enterElseIfDirective(Node node) {}
   public void exitElseIfDirective(Node node) {}

   public void enterEndIfDirective(Node node) {}
   public void exitEndIfDirective(Node node) {}

   public void enterUndefDirective(Node node) {}
   public void exitUndefDirective(Node node) {}

   public void enterErrorDirective(Node node) {}
   public void exitErrorDirective(Node node) {}

   public void enterIncludeName(Node node) {}
   public void exitIncludeName(Node node) {}

   public void enterIncludeDirective(Node node) {}
   public void exitIncludeDirective(Node node) {}

   public void enterLineDirective(Node node) {}
   public void exitLineDirective(Node node) {}

   public void enterUncommandDirective(Node node) {}
   public void exitUncommandDirective(Node node) {}

   public void enterXUncommandDirective(Node node) {}
   public void exitXUncommandDirective(Node node) {}

   public void enterYUncommandDirective(Node node) {}
   public void exitYUncommandDirective(Node node) {}

   public void enterUntranslateDirective(Node node) {}
   public void exitUntranslateDirective(Node node) {}

   public void enterXUntranslateDirective(Node node) {}
   public void exitXUntranslateDirective(Node node) {}

   public void enterYUntranslateDirective(Node node) {}
   public void exitYUntranslateDirective(Node node) {}

   public void enterDumpBlock(Node node) {}
   public void exitDumpBlock(Node node) {}

   public void enterDefine(Node node) {}
   public void exitDefine(Node node) {}

   public void enterDefineParameters(Node node) {}
   public void exitDefineParameters(Node node) {}

   public void enterResultRules(Node node) {}
   public void exitResultRules(Node node) {}

   public void enterParametersList(Node node) {}
   public void exitParametersList(Node node) {}

   public void enterStdOut(Node node) {}
   public void exitStdOut(Node node) {}

   public void enterCommand(Node node) {}
   public void exitCommand(Node node) {}

   public void enterMatchPattern(Node node) {}
   public void exitMatchPattern(Node node) {}

   public void enterResultSep(Node node) {}
   public void exitResultSep(Node node) {}

   public void enterResultPattern(Node node) {}
   public void exitResultPattern(Node node) {}

   public void enterYCommand(Node node) {}
   public void exitYCommand(Node node) {}

   public void enterdirectivePattern(Node node) {}
   public void exitdirectivePattern(Node node) {}

   public void enterundefDirectivePattern(Node node) {}
   public void exitundefDirectivePattern(Node node) {}

   public void enterUncommand(Node node) {}
   public void exitUncommand(Node node) {}

   public void enterXuncommand(Node node) {}
   public void exitXuncommand(Node node) {}

   public void enterYuncommand(Node node) {}
   public void exitYuncommand(Node node) {}

   public void enterXCommand(Node node) {}
   public void exitXCommand(Node node) {}

   public void enterUntranslate(Node node) {}
   public void exitUntranslate(Node node) {}

   public void enterXuntranslate(Node node) {}
   public void exitXuntranslate(Node node) {}

   public void enterYuntranslate(Node node) {}
   public void exitYuntranslate(Node node) {}

   public void enterTranslate(Node node) {}
   public void exitTranslate(Node node) {}

   public void enterYTranslate(Node node) {}
   public void exitYTranslate(Node node) {}

   public void enterXTranslate(Node node) {}
   public void exitXTranslate(Node node) {}

   public void enterEscapedChar(Node node) {}
   public void exitEscapedChar(Node node) {}

   public void enterOptionalMatchMarker(Node node) {}
   public void exitOptionalMatchMarker(Node node) {}

   public void enterOptionalMatchMarkerChunk(Node node) {}
   public void exitOptionalMatchMarkerChunk(Node node) {}

   public void enterMatchMarker(Node node) {}
   public void exitMatchMarker(Node node) {}

   public void enterLiteral(Node node) {}
   public void exitLiteral(Node node) {}

   public void enterSeparator(Node node) {}
   public void exitSeparator(Node node) {}

   public void enterMatchChunk(Node node) {}
   public void exitMatchChunk(Node node) {}

   public void enterIdMarker(Node node) {}
   public void exitIdMarker(Node node) {}

   public void enterListMarker(Node node) {}
   public void exitListMarker(Node node) {}

   public void enterRestrictMarker(Node node) {}
   public void exitRestrictMarker(Node node) {}

   public void enterWildMarker(Node node) {}
   public void exitWildMarker(Node node) {}

   public void enterExtendedMarker(Node node) {}
   public void exitExtendedMarker(Node node) {}

   public void enterIdentifierMarker(Node node) {}
   public void exitIdentifierMarker(Node node) {}

   public void enterRestrictValues(Node node) {}
   public void exitRestrictValues(Node node) {}

   public void enterRestrictValue(Node node) {}
   public void exitRestrictValue(Node node) {}

   public void enterNullMarker(Node node) {}
   public void exitNullMarker(Node node) {}

   public void enterResultMarker(Node node) {}
   public void exitResultMarker(Node node) {}

   public void enterDumbStringifyMarker(Node node) {}
   public void exitDumbStringifyMarker(Node node) {}

   public void enterNormalStringifyMarker(Node node) {}
   public void exitNormalStringifyMarker(Node node) {}

   public void enterSmartStringifyMarker(Node node) {}
   public void exitSmartStringifyMarker(Node node) {}

   public void enterBlockifyMarker(Node node) {}
   public void exitBlockifyMarker(Node node) {}

   public void enterLogifyMarker(Node node) {}
   public void exitLogifyMarker(Node node) {}

   public void enterOptionalResultMarker(Node node) {}
   public void exitOptionalResultMarker(Node node) {}

   public void enterOptionalResultMarkerChunk(Node node) {}
   public void exitOptionalResultMarkerChunk(Node node) {}

   public void enterResultChunk(Node node) {}
   public void exitResultChunk(Node node) {}

   public void enterIfDef(Node node) {}
   public void exitIfDef(Node node) {}

   public void enterIfNDef(Node node) {}
   public void exitIfNDef(Node node) {}

   public void enterDiscardedRemainingLine(Node node) {}
   public void exitDiscardedRemainingLine(Node node) {}

   public void enterElseIf(Node node) {}
   public void exitElseIf(Node node) {}

   public void enterEndIf(Node node) {}
   public void exitEndIf(Node node) {}

   public void enterUndef(Node node) {}
   public void exitUndef(Node node) {}

   public void enterInclude(Node node) {}
   public void exitInclude(Node node) {}

   public void enterDoubleQuoteString(Node node) {}
   public void exitDoubleQuoteString(Node node) {}

   public void enterSingleQuoteString(Node node) {}
   public void exitSingleQuoteString(Node node) {}

   public void enterBeginDumpBlock(Node node) {}
   public void exitBeginDumpBlock(Node node) {}

   public void enterEndDumpBlock(Node node) {}
   public void exitEndDumpBlock(Node node) {}

   public void enterBracketSequence(Node node) {}
   public void exitBracketSequence(Node node) {}

   public void enterAnyRule(Node node) {}
   public void exitAnyRule(Node node) {}

   public void enterBracketString(Node node) {}
   public void exitBracketString(Node node) {}

   public void enterLogicalLiteral(Node node) {}
   public void exitLogicalLiteral(Node node) {}

   public void enterDateTimeLiteral(Node node) {}
   public void exitDateTimeLiteral(Node node) {}

   public void enterNumberLiteral(Node node) {}
   public void exitNumberLiteral(Node node) {}

   public void enterMultiLineDoubleQuoteString(Node node) {}
   public void exitMultiLineDoubleQuoteString(Node node) {}

   public void enterMultiLineSingleQuoteString(Node node) {}
   public void exitMultiLineSingleQuoteString(Node node) {}

   public void enterBreakString(Node node) {}
   public void exitBreakString(Node node) {}

   public void enterMultilineDoubleQuoteStringSegment(Node node) {}
   public void exitMultilineDoubleQuoteStringSegment(Node node) {}

   public void enterMultilineSingleQuoteStringSegment(Node node) {}
   public void exitMultilineSingleQuoteStringSegment(Node node) {}

   public void enterLetter(Node node) {}
   public void exitLetter(Node node) {}

   public void enterIntegerNumber(Node node) {}
   public void exitIntegerNumber(Node node) {}

   public void enterTimePattern(Node node) {}
   public void exitTimePattern(Node node) {}

   public void enterDatePattern(Node node) {}
   public void exitDatePattern(Node node) {}

   public void enterIdentifier(Node node) {}
   public void exitIdentifier(Node node) {}}
