/***************************************************
 * PEG Parser - Generated By YAPP Parser Generator *
 ***************************************************/

package org.uggeri.yapp.runtime.java.test;

import org.uggeri.yapp.runtime.java.node.Node;
import org.uggeri.yapp.runtime.java.node.NodeVisitor;

public abstract class HarbourUnprocessedVisitor implements NodeVisitor {

   public void enterHarbourProgram(Node node) {}
   public void exitHarbourProgram(Node node) {}

   public void enterStatements(Node node) {}
   public void exitStatements(Node node) {}

   public void enterStatement(Node node) {}
   public void exitStatement(Node node) {}

   public void enterUnknownCommand(Node node) {}
   public void exitUnknownCommand(Node node) {}

   public void enterLocalVariablesDeclaration(Node node) {}
   public void exitLocalVariablesDeclaration(Node node) {}

   public void enterFunctionDeclaration(Node node) {}
   public void exitFunctionDeclaration(Node node) {}

   public void enterProcedureDeclaration(Node node) {}
   public void exitProcedureDeclaration(Node node) {}

   public void enterMethodDefinition(Node node) {}
   public void exitMethodDefinition(Node node) {}

   public void enterClassOwner(Node node) {}
   public void exitClassOwner(Node node) {}

   public void enterCreateClass(Node node) {}
   public void exitCreateClass(Node node) {}

   public void enterEndClass(Node node) {}
   public void exitEndClass(Node node) {}

   public void enterClassBodyStmt(Node node) {}
   public void exitClassBodyStmt(Node node) {}

   public void enterSectionScope(Node node) {}
   public void exitSectionScope(Node node) {}

   public void enterMemberScope(Node node) {}
   public void exitMemberScope(Node node) {}

   public void enterMemberScopes(Node node) {}
   public void exitMemberScopes(Node node) {}

   public void enterMethodMember(Node node) {}
   public void exitMethodMember(Node node) {}

   public void enterFieldMember(Node node) {}
   public void exitFieldMember(Node node) {}

   public void enterInLineExpression(Node node) {}
   public void exitInLineExpression(Node node) {}

   public void enterInitFieldMember(Node node) {}
   public void exitInitFieldMember(Node node) {}

   public void enterIsInObject(Node node) {}
   public void exitIsInObject(Node node) {}

   public void enterVariable(Node node) {}
   public void exitVariable(Node node) {}

   public void enterStaticVariablesDeclaration(Node node) {}
   public void exitStaticVariablesDeclaration(Node node) {}

   public void enterFieldsDeclaration(Node node) {}
   public void exitFieldsDeclaration(Node node) {}

   public void enterClassDeclaration(Node node) {}
   public void exitClassDeclaration(Node node) {}

   public void enterOldStyleParametersDeclaration(Node node) {}
   public void exitOldStyleParametersDeclaration(Node node) {}

   public void enterDeclareStatement(Node node) {}
   public void exitDeclareStatement(Node node) {}

   public void enterExitStmt(Node node) {}
   public void exitExitStmt(Node node) {}

   public void enterLoopStmt(Node node) {}
   public void exitLoopStmt(Node node) {}

   public void enterDirective(Node node) {}
   public void exitDirective(Node node) {}

   public void enterLineDirective(Node node) {}
   public void exitLineDirective(Node node) {}

   public void enterIncludeDirective(Node node) {}
   public void exitIncludeDirective(Node node) {}

   public void enterDefineDirective(Node node) {}
   public void exitDefineDirective(Node node) {}

   public void enterTranslateDirective(Node node) {}
   public void exitTranslateDirective(Node node) {}

   public void enterXTranslateDirective(Node node) {}
   public void exitXTranslateDirective(Node node) {}

   public void enterYTranslateDirective(Node node) {}
   public void exitYTranslateDirective(Node node) {}

   public void enterUntranslateDirective(Node node) {}
   public void exitUntranslateDirective(Node node) {}

   public void enterXUntranslateDirective(Node node) {}
   public void exitXUntranslateDirective(Node node) {}

   public void enterYUntranslateDirective(Node node) {}
   public void exitYUntranslateDirective(Node node) {}

   public void enterCommandDirective(Node node) {}
   public void exitCommandDirective(Node node) {}

   public void enterXCommandDirective(Node node) {}
   public void exitXCommandDirective(Node node) {}

   public void enterYCommandDirective(Node node) {}
   public void exitYCommandDirective(Node node) {}

   public void enterUncommandDirective(Node node) {}
   public void exitUncommandDirective(Node node) {}

   public void enterXUncommandDirective(Node node) {}
   public void exitXUncommandDirective(Node node) {}

   public void enterYUncommandDirective(Node node) {}
   public void exitYUncommandDirective(Node node) {}

   public void enterIfDefDirective(Node node) {}
   public void exitIfDefDirective(Node node) {}

   public void enterIfDirective(Node node) {}
   public void exitIfDirective(Node node) {}

   public void enterIfNDefDirective(Node node) {}
   public void exitIfNDefDirective(Node node) {}

   public void enterElseDirective(Node node) {}
   public void exitElseDirective(Node node) {}

   public void enterEndIfDirective(Node node) {}
   public void exitEndIfDirective(Node node) {}

   public void enterPragmaDirective(Node node) {}
   public void exitPragmaDirective(Node node) {}

   public void enterUndefDirective(Node node) {}
   public void exitUndefDirective(Node node) {}

   public void enterStdoutDirective(Node node) {}
   public void exitStdoutDirective(Node node) {}

   public void enterErrorDirective(Node node) {}
   public void exitErrorDirective(Node node) {}

   public void enterAnyToken(Node node) {}
   public void exitAnyToken(Node node) {}

   public void enterSeparator(Node node) {}
   public void exitSeparator(Node node) {}

   public void enterCmdComplementation(Node node) {}
   public void exitCmdComplementation(Node node) {}

   public void enterUnknownIdentifier(Node node) {}
   public void exitUnknownIdentifier(Node node) {}

   public void enterBeginProducer(Node node) {}
   public void exitBeginProducer(Node node) {}

   public void enterEndProducer(Node node) {}
   public void exitEndProducer(Node node) {}

   public void enterBeginTransaction(Node node) {}
   public void exitBeginTransaction(Node node) {}

   public void enterCommitTransaction(Node node) {}
   public void exitCommitTransaction(Node node) {}

   public void enterRollbackTransaction(Node node) {}
   public void exitRollbackTransaction(Node node) {}

   public void enterUseAs(Node node) {}
   public void exitUseAs(Node node) {}

   public void enterUseAsDatabase(Node node) {}
   public void exitUseAsDatabase(Node node) {}

   public void enterUseAsCommand(Node node) {}
   public void exitUseAsCommand(Node node) {}

   public void enterUseAsType(Node node) {}
   public void exitUseAsType(Node node) {}

   public void enterUseAsParams(Node node) {}
   public void exitUseAsParams(Node node) {}

   public void enterUseAlias(Node node) {}
   public void exitUseAlias(Node node) {}

   public void enterUseAsPrecision(Node node) {}
   public void exitUseAsPrecision(Node node) {}

   public void enterUseAsOptions(Node node) {}
   public void exitUseAsOptions(Node node) {}

   public void enterUseArea(Node node) {}
   public void exitUseArea(Node node) {}

   public void enterUseDatabase(Node node) {}
   public void exitUseDatabase(Node node) {}

   public void enterUseAreaVia(Node node) {}
   public void exitUseAreaVia(Node node) {}

   public void enterUseCodepage(Node node) {}
   public void exitUseCodepage(Node node) {}

   public void enterUseOptions(Node node) {}
   public void exitUseOptions(Node node) {}

   public void enterUseIndexes(Node node) {}
   public void exitUseIndexes(Node node) {}

   public void enterArrobaGetSay(Node node) {}
   public void exitArrobaGetSay(Node node) {}

   public void enterSetCmd(Node node) {}
   public void exitSetCmd(Node node) {}

   public void enterReadCmd(Node node) {}
   public void exitReadCmd(Node node) {}

   public void enterClsCmd(Node node) {}
   public void exitClsCmd(Node node) {}

   public void enterClearCmd(Node node) {}
   public void exitClearCmd(Node node) {}

   public void enterKeyboardCmd(Node node) {}
   public void exitKeyboardCmd(Node node) {}

   public void enterWaitCmd(Node node) {}
   public void exitWaitCmd(Node node) {}

   public void enterAcceptCmd(Node node) {}
   public void exitAcceptCmd(Node node) {}

   public void enterInputCmd(Node node) {}
   public void exitInputCmd(Node node) {}

   public void enterReleaseCmd(Node node) {}
   public void exitReleaseCmd(Node node) {}

   public void enterRestoreCmd(Node node) {}
   public void exitRestoreCmd(Node node) {}

   public void enterStoreCmd(Node node) {}
   public void exitStoreCmd(Node node) {}

   public void enterSaveCmd(Node node) {}
   public void exitSaveCmd(Node node) {}

   public void enterJoinCmd(Node node) {}
   public void exitJoinCmd(Node node) {}

   public void enterEjectCmd(Node node) {}
   public void exitEjectCmd(Node node) {}

   public void enterEraseCmd(Node node) {}
   public void exitEraseCmd(Node node) {}

   public void enterDeleteCmd(Node node) {}
   public void exitDeleteCmd(Node node) {}

   public void enterRenameCmd(Node node) {}
   public void exitRenameCmd(Node node) {}

   public void enterCopyCmd(Node node) {}
   public void exitCopyCmd(Node node) {}

   public void enterDirCmd(Node node) {}
   public void exitDirCmd(Node node) {}

   public void enterTypeCmd(Node node) {}
   public void exitTypeCmd(Node node) {}

   public void enterRequestCmd(Node node) {}
   public void exitRequestCmd(Node node) {}

   public void enterCancelCmd(Node node) {}
   public void exitCancelCmd(Node node) {}

   public void enterQuitCmd(Node node) {}
   public void exitQuitCmd(Node node) {}

   public void enterRunCmd(Node node) {}
   public void exitRunCmd(Node node) {}

   public void enterOutCmd(Node node) {}
   public void exitOutCmd(Node node) {}

   public void enterCloseCmd(Node node) {}
   public void exitCloseCmd(Node node) {}

   public void enterSelectCmd(Node node) {}
   public void exitSelectCmd(Node node) {}

   public void enterAppendCmd(Node node) {}
   public void exitAppendCmd(Node node) {}

   public void enterPackCmd(Node node) {}
   public void exitPackCmd(Node node) {}

   public void enterZapCmd(Node node) {}
   public void exitZapCmd(Node node) {}

   public void enterUnlockCmd(Node node) {}
   public void exitUnlockCmd(Node node) {}

   public void enterCommitCmd(Node node) {}
   public void exitCommitCmd(Node node) {}

   public void enterGotoCmd(Node node) {}
   public void exitGotoCmd(Node node) {}

   public void enterSkipCmd(Node node) {}
   public void exitSkipCmd(Node node) {}

   public void enterFindCmd(Node node) {}
   public void exitFindCmd(Node node) {}

   public void enterContinueCmd(Node node) {}
   public void exitContinueCmd(Node node) {}

   public void enterSeekCmd(Node node) {}
   public void exitSeekCmd(Node node) {}

   public void enterLocateCmd(Node node) {}
   public void exitLocateCmd(Node node) {}

   public void enterReplaceCmd(Node node) {}
   public void exitReplaceCmd(Node node) {}

   public void enterRecallCmd(Node node) {}
   public void exitRecallCmd(Node node) {}

   public void enterCreateCmd(Node node) {}
   public void exitCreateCmd(Node node) {}

   public void enterSortCmd(Node node) {}
   public void exitSortCmd(Node node) {}

   public void enterTotalCmd(Node node) {}
   public void exitTotalCmd(Node node) {}

   public void enterUpdateCmd(Node node) {}
   public void exitUpdateCmd(Node node) {}

   public void enterCountCmd(Node node) {}
   public void exitCountCmd(Node node) {}

   public void enterSumCmd(Node node) {}
   public void exitSumCmd(Node node) {}

   public void enterAverageCmd(Node node) {}
   public void exitAverageCmd(Node node) {}

   public void enterListCmd(Node node) {}
   public void exitListCmd(Node node) {}

   public void enterDisplayCmd(Node node) {}
   public void exitDisplayCmd(Node node) {}

   public void enterReportCmd(Node node) {}
   public void exitReportCmd(Node node) {}

   public void enterLabelCmd(Node node) {}
   public void exitLabelCmd(Node node) {}

   public void enterIndexOnCmd(Node node) {}
   public void exitIndexOnCmd(Node node) {}

   public void enterReindexCmd(Node node) {}
   public void exitReindexCmd(Node node) {}

   public void enterQOutCommand(Node node) {}
   public void exitQOutCommand(Node node) {}

   public void enterMenuToCmd(Node node) {}
   public void exitMenuToCmd(Node node) {}

   public void enterDefaultCmd(Node node) {}
   public void exitDefaultCmd(Node node) {}

   public void enterMacroSubstition(Node node) {}
   public void exitMacroSubstition(Node node) {}

   public void enterIgnoreLine(Node node) {}
   public void exitIgnoreLine(Node node) {}

   public void enterVariableDeclarationList(Node node) {}
   public void exitVariableDeclarationList(Node node) {}

   public void enterParametersDeclarationList(Node node) {}
   public void exitParametersDeclarationList(Node node) {}

   public void enterCommaVariableDefinition(Node node) {}
   public void exitCommaVariableDefinition(Node node) {}

   public void enterVariableDefinition(Node node) {}
   public void exitVariableDefinition(Node node) {}

   public void enterVariableDefinitionCommaList(Node node) {}
   public void exitVariableDefinitionCommaList(Node node) {}

   public void enterAssignmentOperator(Node node) {}
   public void exitAssignmentOperator(Node node) {}

   public void enterInitializeVariable(Node node) {}
   public void exitInitializeVariable(Node node) {}

   public void enterExpressionAsType(Node node) {}
   public void exitExpressionAsType(Node node) {}

   public void enterAsType(Node node) {}
   public void exitAsType(Node node) {}

   public void enterOptionalArrayDimension(Node node) {}
   public void exitOptionalArrayDimension(Node node) {}

   public void enterArrayDimension(Node node) {}
   public void exitArrayDimension(Node node) {}

   public void enterValuesList(Node node) {}
   public void exitValuesList(Node node) {}

   public void enterInTable(Node node) {}
   public void exitInTable(Node node) {}

   public void enterVariableList(Node node) {}
   public void exitVariableList(Node node) {}

   public void enterIdentifierList(Node node) {}
   public void exitIdentifierList(Node node) {}

   public void enterMemvarDeclaration(Node node) {}
   public void exitMemvarDeclaration(Node node) {}

   public void enterAliasIdentifier(Node node) {}
   public void exitAliasIdentifier(Node node) {}

   public void enterExpressionList(Node node) {}
   public void exitExpressionList(Node node) {}

   public void enterMacro(Node node) {}
   public void exitMacro(Node node) {}

   public void enterAliasedExpression(Node node) {}
   public void exitAliasedExpression(Node node) {}

   public void enterParenthesesExpressionList(Node node) {}
   public void exitParenthesesExpressionList(Node node) {}

   public void enterParenthesesStatement(Node node) {}
   public void exitParenthesesStatement(Node node) {}

   public void enterQualifiedVariable(Node node) {}
   public void exitQualifiedVariable(Node node) {}

   public void enterMacroFunctionCall(Node node) {}
   public void exitMacroFunctionCall(Node node) {}

   public void enterParParameters(Node node) {}
   public void exitParParameters(Node node) {}

   public void enterSimpleFunctionCall(Node node) {}
   public void exitSimpleFunctionCall(Node node) {}

   public void enterIgnoreRestOfLine(Node node) {}
   public void exitIgnoreRestOfLine(Node node) {}

   public void enterIfInLine(Node node) {}
   public void exitIfInLine(Node node) {}

   public void enterIfBegin(Node node) {}
   public void exitIfBegin(Node node) {}

   public void enterCondition(Node node) {}
   public void exitCondition(Node node) {}

   public void enterIfEnd(Node node) {}
   public void exitIfEnd(Node node) {}

   public void enterEndKeyword(Node node) {}
   public void exitEndKeyword(Node node) {}

   public void enterDoWhileBegin(Node node) {}
   public void exitDoWhileBegin(Node node) {}

   public void enterDoWhileEnd(Node node) {}
   public void exitDoWhileEnd(Node node) {}

   public void enterForNextBegin(Node node) {}
   public void exitForNextBegin(Node node) {}

   public void enterForNextEnd(Node node) {}
   public void exitForNextEnd(Node node) {}

   public void enterBeginSequenceBegin(Node node) {}
   public void exitBeginSequenceBegin(Node node) {}

   public void enterDoCaseBegin(Node node) {}
   public void exitDoCaseBegin(Node node) {}

   public void enterDoCaseEnd(Node node) {}
   public void exitDoCaseEnd(Node node) {}

   public void enterForEachBegin(Node node) {}
   public void exitForEachBegin(Node node) {}

   public void enterSwitchBegin(Node node) {}
   public void exitSwitchBegin(Node node) {}

   public void enterSwitchEnd(Node node) {}
   public void exitSwitchEnd(Node node) {}

   public void enterTryCatchBegin(Node node) {}
   public void exitTryCatchBegin(Node node) {}

   public void enterTryCatchEnd(Node node) {}
   public void exitTryCatchEnd(Node node) {}

   public void enterFinallyBlockBegin(Node node) {}
   public void exitFinallyBlockBegin(Node node) {}

   public void enterReturn(Node node) {}
   public void exitReturn(Node node) {}

   public void enterBreak(Node node) {}
   public void exitBreak(Node node) {}

   public void enterClassMemberDeclaration(Node node) {}
   public void exitClassMemberDeclaration(Node node) {}

   public void enterPublicVariableDeclaration(Node node) {}
   public void exitPublicVariableDeclaration(Node node) {}

   public void enterPrivateVariableDeclaration(Node node) {}
   public void exitPrivateVariableDeclaration(Node node) {}

   public void enterExternal(Node node) {}
   public void exitExternal(Node node) {}

   public void enterAnnounce(Node node) {}
   public void exitAnnounce(Node node) {}

   public void enterRequest(Node node) {}
   public void exitRequest(Node node) {}

   public void enterThrow(Node node) {}
   public void exitThrow(Node node) {}

   public void enterStatementAssignmentExpression(Node node) {}
   public void exitStatementAssignmentExpression(Node node) {}

   public void enterSelfExpression(Node node) {}
   public void exitSelfExpression(Node node) {}

   public void enterAliasedMacro(Node node) {}
   public void exitAliasedMacro(Node node) {}

   public void enterQualifiedExpression(Node node) {}
   public void exitQualifiedExpression(Node node) {}

   public void enterMemberCall(Node node) {}
   public void exitMemberCall(Node node) {}

   public void enterKeywordsFunctionCall(Node node) {}
   public void exitKeywordsFunctionCall(Node node) {}

   public void enterMethodDeclaration(Node node) {}
   public void exitMethodDeclaration(Node node) {}

   public void enterParParametersDeclaration(Node node) {}
   public void exitParParametersDeclaration(Node node) {}

   public void enterAttributeListDeclaration(Node node) {}
   public void exitAttributeListDeclaration(Node node) {}

   public void enterMacroPrefix(Node node) {}
   public void exitMacroPrefix(Node node) {}

   public void enterMacroSufix(Node node) {}
   public void exitMacroSufix(Node node) {}

   public void enterMacroVar(Node node) {}
   public void exitMacroVar(Node node) {}

   public void enterMacroExpression(Node node) {}
   public void exitMacroExpression(Node node) {}

   public void enterFunctionReference(Node node) {}
   public void exitFunctionReference(Node node) {}

   public void enterValueByReference(Node node) {}
   public void exitValueByReference(Node node) {}

   public void enterAliasedField(Node node) {}
   public void exitAliasedField(Node node) {}

   public void enterParameter(Node node) {}
   public void exitParameter(Node node) {}

   public void enterCommaParameter(Node node) {}
   public void exitCommaParameter(Node node) {}

   public void enterParameterCommaList(Node node) {}
   public void exitParameterCommaList(Node node) {}

   public void enterParametersList(Node node) {}
   public void exitParametersList(Node node) {}

   public void enterOptionalParametersList(Node node) {}
   public void exitOptionalParametersList(Node node) {}

   public void enterElseIfBegin(Node node) {}
   public void exitElseIfBegin(Node node) {}

   public void enterElseBegin(Node node) {}
   public void exitElseBegin(Node node) {}

   public void enterOtherwiseBegin(Node node) {}
   public void exitOtherwiseBegin(Node node) {}

   public void enterDoCaseOptionBegin(Node node) {}
   public void exitDoCaseOptionBegin(Node node) {}

   public void enterStepArgument(Node node) {}
   public void exitStepArgument(Node node) {}

   public void enterStep(Node node) {}
   public void exitStep(Node node) {}

   public void enterAssignmentExpression(Node node) {}
   public void exitAssignmentExpression(Node node) {}

   public void enterBeginSequenceKeyword(Node node) {}
   public void exitBeginSequenceKeyword(Node node) {}

   public void enterWithOption(Node node) {}
   public void exitWithOption(Node node) {}

   public void enterCodeBlockLiteral(Node node) {}
   public void exitCodeBlockLiteral(Node node) {}

   public void enterWithCodeBlock(Node node) {}
   public void exitWithCodeBlock(Node node) {}

   public void enterBeginSequenceEnd(Node node) {}
   public void exitBeginSequenceEnd(Node node) {}

   public void enterUsingSpec(Node node) {}
   public void exitUsingSpec(Node node) {}

   public void enterUsingIdentifier(Node node) {}
   public void exitUsingIdentifier(Node node) {}

   public void enterRecoverBegin(Node node) {}
   public void exitRecoverBegin(Node node) {}

   public void enterAlwaysBegin(Node node) {}
   public void exitAlwaysBegin(Node node) {}

   public void enterParenthesesSwitchConstant(Node node) {}
   public void exitParenthesesSwitchConstant(Node node) {}

   public void enterSwitchConstant(Node node) {}
   public void exitSwitchConstant(Node node) {}

   public void enterLogicalLiteral(Node node) {}
   public void exitLogicalLiteral(Node node) {}

   public void enterSwitchOptionBegin(Node node) {}
   public void exitSwitchOptionBegin(Node node) {}

   public void enterSwitchDefaultBegin(Node node) {}
   public void exitSwitchDefaultBegin(Node node) {}

   public void enterCatchBlockBegin(Node node) {}
   public void exitCatchBlockBegin(Node node) {}

   public void enterCodeBlockParameters(Node node) {}
   public void exitCodeBlockParameters(Node node) {}

   public void enterArrayLiteral(Node node) {}
   public void exitArrayLiteral(Node node) {}

   public void enterArrayItemList(Node node) {}
   public void exitArrayItemList(Node node) {}

   public void enterArrayItem(Node node) {}
   public void exitArrayItem(Node node) {}

   public void enterVariableByRef(Node node) {}
   public void exitVariableByRef(Node node) {}

   public void enterAliasedFieldByRef(Node node) {}
   public void exitAliasedFieldByRef(Node node) {}

   public void enterQualifiedVariableByRef(Node node) {}
   public void exitQualifiedVariableByRef(Node node) {}

   public void enterArrayByRef(Node node) {}
   public void exitArrayByRef(Node node) {}

   public void enterHashItem(Node node) {}
   public void exitHashItem(Node node) {}

   public void enterHashItemsList(Node node) {}
   public void exitHashItemsList(Node node) {}

   public void enterHashItems(Node node) {}
   public void exitHashItems(Node node) {}

   public void enterHashContent(Node node) {}
   public void exitHashContent(Node node) {}

   public void enterHashLiteral(Node node) {}
   public void exitHashLiteral(Node node) {}

   public void enterNilValue(Node node) {}
   public void exitNilValue(Node node) {}

   public void enterLiteral(Node node) {}
   public void exitLiteral(Node node) {}

   public void enterDateTimeLiteral(Node node) {}
   public void exitDateTimeLiteral(Node node) {}

   public void enterTimeLiteral(Node node) {}
   public void exitTimeLiteral(Node node) {}

   public void enterIntegerNumber(Node node) {}
   public void exitIntegerNumber(Node node) {}

   public void enterDatePattern(Node node) {}
   public void exitDatePattern(Node node) {}

   public void enterCommaOrCloseOpenBracket(Node node) {}
   public void exitCommaOrCloseOpenBracket(Node node) {}

   public void enterCommaIndexItem(Node node) {}
   public void exitCommaIndexItem(Node node) {}

   public void enterIndexItemCommaList(Node node) {}
   public void exitIndexItemCommaList(Node node) {}

   public void enterIndexList(Node node) {}
   public void exitIndexList(Node node) {}

   public void enterIndexItem(Node node) {}
   public void exitIndexItem(Node node) {}

   public void enterArrayIndex(Node node) {}
   public void exitArrayIndex(Node node) {}

   public void enterAssignOperator(Node node) {}
   public void exitAssignOperator(Node node) {}

   public void enterExpression(Node node) {}
   public void exitExpression(Node node) {}

   public void enterOptionalOrExpression(Node node) {}
   public void exitOptionalOrExpression(Node node) {}

   public void enterOrExpression(Node node) {}
   public void exitOrExpression(Node node) {}

   public void enterOptionalAndExpression(Node node) {}
   public void exitOptionalAndExpression(Node node) {}

   public void enterAndExpression(Node node) {}
   public void exitAndExpression(Node node) {}

   public void enterRelationalOperator(Node node) {}
   public void exitRelationalOperator(Node node) {}

   public void enterOptionalRelationalExpression(Node node) {}
   public void exitOptionalRelationalExpression(Node node) {}

   public void enterRelationalExpression(Node node) {}
   public void exitRelationalExpression(Node node) {}

   public void enterMathOperator(Node node) {}
   public void exitMathOperator(Node node) {}

   public void enterOptionalMathExpression(Node node) {}
   public void exitOptionalMathExpression(Node node) {}

   public void enterMathExpression(Node node) {}
   public void exitMathExpression(Node node) {}

   public void enterPrefixedExpression(Node node) {}
   public void exitPrefixedExpression(Node node) {}

   public void enterPostfixedExpression(Node node) {}
   public void exitPostfixedExpression(Node node) {}

   public void enterPrimaryExpression(Node node) {}
   public void exitPrimaryExpression(Node node) {}

   public void enterPrefixOperator(Node node) {}
   public void exitPrefixOperator(Node node) {}

   public void enterPostfixOperator(Node node) {}
   public void exitPostfixOperator(Node node) {}

   public void enterAtomicExpression(Node node) {}
   public void exitAtomicExpression(Node node) {}

   public void enterKeyboardCall(Node node) {}
   public void exitKeyboardCall(Node node) {}

   public void enterClearTypehead(Node node) {}
   public void exitClearTypehead(Node node) {}

   public void enterArrayAccess(Node node) {}
   public void exitArrayAccess(Node node) {}

   public void enterLeftValue(Node node) {}
   public void exitLeftValue(Node node) {}

   public void enterParenthesesLeftValue(Node node) {}
   public void exitParenthesesLeftValue(Node node) {}

   public void enterDump(Node node) {}
   public void exitDump(Node node) {}

   public void enterDumpBody(Node node) {}
   public void exitDumpBody(Node node) {}

   public void enterEndDump(Node node) {}
   public void exitEndDump(Node node) {}

   public void enterParameterDeclaration(Node node) {}
   public void exitParameterDeclaration(Node node) {}

   public void enterParametersDeclaration(Node node) {}
   public void exitParametersDeclaration(Node node) {}

   public void enterFunctionModifiers(Node node) {}
   public void exitFunctionModifiers(Node node) {}

   public void enterFunctionModifier(Node node) {}
   public void exitFunctionModifier(Node node) {}

   public void enterStringLiteral(Node node) {}
   public void exitStringLiteral(Node node) {}

   public void enterNumberLiteral(Node node) {}
   public void exitNumberLiteral(Node node) {}

   public void enterArraySubType(Node node) {}
   public void exitArraySubType(Node node) {}

   public void enterDataType(Node node) {}
   public void exitDataType(Node node) {}

   public void enterArrayType(Node node) {}
   public void exitArrayType(Node node) {}

   public void enterArray(Node node) {}
   public void exitArray(Node node) {}

   public void enterClass(Node node) {}
   public void exitClass(Node node) {}

   public void enterAsDataType(Node node) {}
   public void exitAsDataType(Node node) {}

   public void enterIdentifier(Node node) {}
   public void exitIdentifier(Node node) {}

   public void enterWhitespace(Node node) {}
   public void exitWhitespace(Node node) {}

   public void enterLineComment(Node node) {}
   public void exitLineComment(Node node) {}

   public void enterBlockComment(Node node) {}
   public void exitBlockComment(Node node) {}

   public void enterAloneLineComment(Node node) {}
   public void exitAloneLineComment(Node node) {}

   public void enterEndStmt(Node node) {}
   public void exitEndStmt(Node node) {}

   public void enterSpacing(Node node) {}
   public void exitSpacing(Node node) {}

   public void enterContinueNL(Node node) {}
   public void exitContinueNL(Node node) {}}
