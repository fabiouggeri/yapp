/***************************************************
 * PEG Parser - Generated By YAPP Parser Generator *
 ***************************************************/

package org.uggeri.yapp.runtime.java.test;

import org.uggeri.yapp.runtime.java.node.Node;
import org.uggeri.yapp.runtime.java.node.NodeVisitor;

public abstract class OracleScriptVisitor implements NodeVisitor {

   public void enterSqlSentence(Node node) {}
   public void exitSqlSentence(Node node) {}

   public void enterDmlSentence(Node node) {}
   public void exitDmlSentence(Node node) {}

   public void enterWaitMode(Node node) {}
   public void exitWaitMode(Node node) {}

   public void enterCommitComment(Node node) {}
   public void exitCommitComment(Node node) {}

   public void enterWriteMode(Node node) {}
   public void exitWriteMode(Node node) {}

   public void enterForceCommit(Node node) {}
   public void exitForceCommit(Node node) {}

   public void enterNormalCommit(Node node) {}
   public void exitNormalCommit(Node node) {}

   public void enterCommitOptions(Node node) {}
   public void exitCommitOptions(Node node) {}

   public void enterCommitStatement(Node node) {}
   public void exitCommitStatement(Node node) {}

   public void enterLockTableStatement(Node node) {}
   public void exitLockTableStatement(Node node) {}

   public void enterLockMode(Node node) {}
   public void exitLockMode(Node node) {}

   public void enterToSavePoint(Node node) {}
   public void exitToSavePoint(Node node) {}

   public void enterForceRollback(Node node) {}
   public void exitForceRollback(Node node) {}

   public void enterRollbackOptions(Node node) {}
   public void exitRollbackOptions(Node node) {}

   public void enterRollbacklStatement(Node node) {}
   public void exitRollbacklStatement(Node node) {}

   public void enterTransactionName(Node node) {}
   public void exitTransactionName(Node node) {}

   public void enterUseRollbackSegment(Node node) {}
   public void exitUseRollbackSegment(Node node) {}

   public void enterIsolationLevel(Node node) {}
   public void exitIsolationLevel(Node node) {}

   public void enterReadMode(Node node) {}
   public void exitReadMode(Node node) {}

   public void enterSetTransactionOptions(Node node) {}
   public void exitSetTransactionOptions(Node node) {}

   public void enterSetTransactionStatement(Node node) {}
   public void exitSetTransactionStatement(Node node) {}

   public void enterSavepointStatement(Node node) {}
   public void exitSavepointStatement(Node node) {}

   public void enterSelectStatement(Node node) {}
   public void exitSelectStatement(Node node) {}

   public void enterMergeUpdateClause(Node node) {}
   public void exitMergeUpdateClause(Node node) {}

   public void enterMergeInsertClause(Node node) {}
   public void exitMergeInsertClause(Node node) {}

   public void enterMergeStatement(Node node) {}
   public void exitMergeStatement(Node node) {}

   public void enterBlockHint(Node node) {}
   public void exitBlockHint(Node node) {}

   public void enterLineHint(Node node) {}
   public void exitLineHint(Node node) {}

   public void enterHint(Node node) {}
   public void exitHint(Node node) {}

   public void enterListAllFields(Node node) {}
   public void exitListAllFields(Node node) {}

   public void enterSelectListExpressionElement(Node node) {}
   public void exitSelectListExpressionElement(Node node) {}

   public void enterSelectListElement(Node node) {}
   public void exitSelectListElement(Node node) {}

   public void enterColumnAlias(Node node) {}
   public void exitColumnAlias(Node node) {}

   public void enterCommaSelectListElement(Node node) {}
   public void exitCommaSelectListElement(Node node) {}

   public void enterZeroOrMoreCommaSelectListElement(Node node) {}
   public void exitZeroOrMoreCommaSelectListElement(Node node) {}

   public void enterListOfSelectListElement(Node node) {}
   public void exitListOfSelectListElement(Node node) {}

   public void enterSelectList(Node node) {}
   public void exitSelectList(Node node) {}

   public void enterSubqueryReadOnlyRestriction(Node node) {}
   public void exitSubqueryReadOnlyRestriction(Node node) {}

   public void enterSubqueryCheckConstraintName(Node node) {}
   public void exitSubqueryCheckConstraintName(Node node) {}

   public void enterSubqueryCheckOptionRestriction(Node node) {}
   public void exitSubqueryCheckOptionRestriction(Node node) {}

   public void enterSubqueryRestrictionType(Node node) {}
   public void exitSubqueryRestrictionType(Node node) {}

   public void enterSubqueryRestriction(Node node) {}
   public void exitSubqueryRestriction(Node node) {}

   public void enterSampleNumber(Node node) {}
   public void exitSampleNumber(Node node) {}

   public void enterSeed(Node node) {}
   public void exitSeed(Node node) {}

   public void enterSampleClause(Node node) {}
   public void exitSampleClause(Node node) {}

   public void enterTableOrView(Node node) {}
   public void exitTableOrView(Node node) {}

   public void enterQueryTableExpression(Node node) {}
   public void exitQueryTableExpression(Node node) {}

   public void enterDBLink(Node node) {}
   public void exitDBLink(Node node) {}

   public void enterTableName(Node node) {}
   public void exitTableName(Node node) {}

   public void enterSqlFunctionCallAsIdentifier(Node node) {}
   public void exitSqlFunctionCallAsIdentifier(Node node) {}

   public void enterCollectionExpression(Node node) {}
   public void exitCollectionExpression(Node node) {}

   public void enterTableCollectionExpression(Node node) {}
   public void exitTableCollectionExpression(Node node) {}

   public void enterSqlMathOperator(Node node) {}
   public void exitSqlMathOperator(Node node) {}

   public void enterSqlExpression(Node node) {}
   public void exitSqlExpression(Node node) {}

   public void enterSqlMathExpression(Node node) {}
   public void exitSqlMathExpression(Node node) {}

   public void enterParenthesesSqlExpression(Node node) {}
   public void exitParenthesesSqlExpression(Node node) {}

   public void enterSqlUnaryOperator(Node node) {}
   public void exitSqlUnaryOperator(Node node) {}

   public void enterSqlUnaryExpression(Node node) {}
   public void exitSqlUnaryExpression(Node node) {}

   public void enterSqlLeftAtomicExpression(Node node) {}
   public void exitSqlLeftAtomicExpression(Node node) {}

   public void enterDateTimeExpression(Node node) {}
   public void exitDateTimeExpression(Node node) {}

   public void enterSqlAtomicExpression(Node node) {}
   public void exitSqlAtomicExpression(Node node) {}

   public void enterSqlCaseExpression(Node node) {}
   public void exitSqlCaseExpression(Node node) {}

   public void enterSqlWhenExpressionThen(Node node) {}
   public void exitSqlWhenExpressionThen(Node node) {}

   public void enterSqlSimpleCaseExpression(Node node) {}
   public void exitSqlSimpleCaseExpression(Node node) {}

   public void enterSqlWhenConditionThen(Node node) {}
   public void exitSqlWhenConditionThen(Node node) {}

   public void enterSqlSearchedCaseExpression(Node node) {}
   public void exitSqlSearchedCaseExpression(Node node) {}

   public void enterSqlCaseExpressionElse(Node node) {}
   public void exitSqlCaseExpressionElse(Node node) {}

   public void enterRowNum(Node node) {}
   public void exitRowNum(Node node) {}

   public void enterIdentifiedRowId(Node node) {}
   public void exitIdentifiedRowId(Node node) {}

   public void enterRowIdColumn(Node node) {}
   public void exitRowIdColumn(Node node) {}

   public void enterLevel(Node node) {}
   public void exitLevel(Node node) {}

   public void enterSqlOuterJoinObject(Node node) {}
   public void exitSqlOuterJoinObject(Node node) {}

   public void enterSqlSimpleExpression(Node node) {}
   public void exitSqlSimpleExpression(Node node) {}

   public void enterSysDate(Node node) {}
   public void exitSysDate(Node node) {}

   public void enterTimeExpression(Node node) {}
   public void exitTimeExpression(Node node) {}

   public void enterOuterJoinSign(Node node) {}
   public void exitOuterJoinSign(Node node) {}

   public void enterOrderByFunctionClause(Node node) {}
   public void exitOrderByFunctionClause(Node node) {}

   public void enterAvg(Node node) {}
   public void exitAvg(Node node) {}

   public void enterCast(Node node) {}
   public void exitCast(Node node) {}

   public void enterChr(Node node) {}
   public void exitChr(Node node) {}

   public void enterMiningAttributeClause(Node node) {}
   public void exitMiningAttributeClause(Node node) {}

   public void enterClusterId(Node node) {}
   public void exitClusterId(Node node) {}

   public void enterClusterProbability(Node node) {}
   public void exitClusterProbability(Node node) {}

   public void enterClusterSet(Node node) {}
   public void exitClusterSet(Node node) {}

   public void enterCorr(Node node) {}
   public void exitCorr(Node node) {}

   public void enterDistinctExpression(Node node) {}
   public void exitDistinctExpression(Node node) {}

   public void enterAllExpression(Node node) {}
   public void exitAllExpression(Node node) {}

   public void enterCount(Node node) {}
   public void exitCount(Node node) {}

   public void enterCovarPop(Node node) {}
   public void exitCovarPop(Node node) {}

   public void enterCovarSamp(Node node) {}
   public void exitCovarSamp(Node node) {}

   public void enterCumeDistAnalytic(Node node) {}
   public void exitCumeDistAnalytic(Node node) {}

   public void enterCumeDistAggregate(Node node) {}
   public void exitCumeDistAggregate(Node node) {}

   public void enterDecompose(Node node) {}
   public void exitDecompose(Node node) {}

   public void enterDenseRankAggregate(Node node) {}
   public void exitDenseRankAggregate(Node node) {}

   public void enterDenseRankAnalytic(Node node) {}
   public void exitDenseRankAnalytic(Node node) {}

   public void enterOverQueryPartitionClause(Node node) {}
   public void exitOverQueryPartitionClause(Node node) {}

   public void enterOverParenthesesQueryPartitionClause(Node node) {}
   public void exitOverParenthesesQueryPartitionClause(Node node) {}

   public void enterDenseRankClause(Node node) {}
   public void exitDenseRankClause(Node node) {}

   public void enterDataToExtract(Node node) {}
   public void exitDataToExtract(Node node) {}

   public void enterExtract(Node node) {}
   public void exitExtract(Node node) {}

   public void enterFeatureId(Node node) {}
   public void exitFeatureId(Node node) {}

   public void enterFeatureSet(Node node) {}
   public void exitFeatureSet(Node node) {}

   public void enterFeatureValue(Node node) {}
   public void exitFeatureValue(Node node) {}

   public void enterIgnoreNulls(Node node) {}
   public void exitIgnoreNulls(Node node) {}

   public void enterFirstValue(Node node) {}
   public void exitFirstValue(Node node) {}

   public void enterLag(Node node) {}
   public void exitLag(Node node) {}

   public void enterLastValue(Node node) {}
   public void exitLastValue(Node node) {}

   public void enterLead(Node node) {}
   public void exitLead(Node node) {}

   public void enterListAgg(Node node) {}
   public void exitListAgg(Node node) {}

   public void enterMax(Node node) {}
   public void exitMax(Node node) {}

   public void enterMedian(Node node) {}
   public void exitMedian(Node node) {}

   public void enterMin(Node node) {}
   public void exitMin(Node node) {}

   public void enterNTile(Node node) {}
   public void exitNTile(Node node) {}

   public void enterPercentRankAggregate(Node node) {}
   public void exitPercentRankAggregate(Node node) {}

   public void enterPercentRankAnalytic(Node node) {}
   public void exitPercentRankAnalytic(Node node) {}

   public void enterPercentileCont(Node node) {}
   public void exitPercentileCont(Node node) {}

   public void enterPercentileDisc(Node node) {}
   public void exitPercentileDisc(Node node) {}

   public void enterCostMatrixClauseValues(Node node) {}
   public void exitCostMatrixClauseValues(Node node) {}

   public void enterCostMatrixClauseModel(Node node) {}
   public void exitCostMatrixClauseModel(Node node) {}

   public void enterCostMatrixClause(Node node) {}
   public void exitCostMatrixClause(Node node) {}

   public void enterPrediction(Node node) {}
   public void exitPrediction(Node node) {}

   public void enterPredictionBounds(Node node) {}
   public void exitPredictionBounds(Node node) {}

   public void enterPredictionCost(Node node) {}
   public void exitPredictionCost(Node node) {}

   public void enterPredictionDetails(Node node) {}
   public void exitPredictionDetails(Node node) {}

   public void enterPredictionProbability(Node node) {}
   public void exitPredictionProbability(Node node) {}

   public void enterPredictionSet(Node node) {}
   public void exitPredictionSet(Node node) {}

   public void enterRankAggregate(Node node) {}
   public void exitRankAggregate(Node node) {}

   public void enterRankAnalytic(Node node) {}
   public void exitRankAnalytic(Node node) {}

   public void enterRatioToReport(Node node) {}
   public void exitRatioToReport(Node node) {}

   public void enterRegrLinearFunctions(Node node) {}
   public void exitRegrLinearFunctions(Node node) {}

   public void enterRowNumber(Node node) {}
   public void exitRowNumber(Node node) {}

   public void enterStdDev(Node node) {}
   public void exitStdDev(Node node) {}

   public void enterStdDevPop(Node node) {}
   public void exitStdDevPop(Node node) {}

   public void enterStdDevSamp(Node node) {}
   public void exitStdDevSamp(Node node) {}

   public void enterSum(Node node) {}
   public void exitSum(Node node) {}

   public void enterTranslate(Node node) {}
   public void exitTranslate(Node node) {}

   public void enterTreat(Node node) {}
   public void exitTreat(Node node) {}

   public void enterTrimMode(Node node) {}
   public void exitTrimMode(Node node) {}

   public void enterTrim(Node node) {}
   public void exitTrim(Node node) {}

   public void enterVarPop(Node node) {}
   public void exitVarPop(Node node) {}

   public void enterVarSamp(Node node) {}
   public void exitVarSamp(Node node) {}

   public void enterVariance(Node node) {}
   public void exitVariance(Node node) {}

   public void enterXmlAgg(Node node) {}
   public void exitXmlAgg(Node node) {}

   public void enterXmlAlias(Node node) {}
   public void exitXmlAlias(Node node) {}

   public void enterXmlCast(Node node) {}
   public void exitXmlCast(Node node) {}

   public void enterXmlPar(Node node) {}
   public void exitXmlPar(Node node) {}

   public void enterXmlColAttVal(Node node) {}
   public void exitXmlColAttVal(Node node) {}

   public void enterXmlAttributesClause(Node node) {}
   public void exitXmlAttributesClause(Node node) {}

   public void enterXmlElement(Node node) {}
   public void exitXmlElement(Node node) {}

   public void enterAsAlias(Node node) {}
   public void exitAsAlias(Node node) {}

   public void enterAliasedExpression(Node node) {}
   public void exitAliasedExpression(Node node) {}

   public void enterXmlPassingClause(Node node) {}
   public void exitXmlPassingClause(Node node) {}

   public void enterXmlExists(Node node) {}
   public void exitXmlExists(Node node) {}

   public void enterXmlForest(Node node) {}
   public void exitXmlForest(Node node) {}

   public void enterXmlParse(Node node) {}
   public void exitXmlParse(Node node) {}

   public void enterXmlPI(Node node) {}
   public void exitXmlPI(Node node) {}

   public void enterXmlQuery(Node node) {}
   public void exitXmlQuery(Node node) {}

   public void enterXmlRoot(Node node) {}
   public void exitXmlRoot(Node node) {}

   public void enterAsDataType(Node node) {}
   public void exitAsDataType(Node node) {}

   public void enterXmlSerialize(Node node) {}
   public void exitXmlSerialize(Node node) {}

   public void enterXmlNamespacesArg(Node node) {}
   public void exitXmlNamespacesArg(Node node) {}

   public void enterXmlNamespacesArgs(Node node) {}
   public void exitXmlNamespacesArgs(Node node) {}

   public void enterXmlNamespacesClause(Node node) {}
   public void exitXmlNamespacesClause(Node node) {}

   public void enterXmlTableColumn(Node node) {}
   public void exitXmlTableColumn(Node node) {}

   public void enterXmlTableOptions(Node node) {}
   public void exitXmlTableOptions(Node node) {}

   public void enterXmlTable(Node node) {}
   public void exitXmlTable(Node node) {}

   public void enterBuiltInFunctionCall(Node node) {}
   public void exitBuiltInFunctionCall(Node node) {}

   public void enterAnalyticFunctionCall(Node node) {}
   public void exitAnalyticFunctionCall(Node node) {}

   public void enterSqlIdentifiedFunctionParameter(Node node) {}
   public void exitSqlIdentifiedFunctionParameter(Node node) {}

   public void enterFunctionParameter(Node node) {}
   public void exitFunctionParameter(Node node) {}

   public void enterUnboundedPreceding(Node node) {}
   public void exitUnboundedPreceding(Node node) {}

   public void enterUnboundedFollowing(Node node) {}
   public void exitUnboundedFollowing(Node node) {}

   public void enterCurrentRow(Node node) {}
   public void exitCurrentRow(Node node) {}

   public void enterPreceding(Node node) {}
   public void exitPreceding(Node node) {}

   public void enterFollowing(Node node) {}
   public void exitFollowing(Node node) {}

   public void enterBetweenWindowingClause(Node node) {}
   public void exitBetweenWindowingClause(Node node) {}

   public void enterWindowingClause(Node node) {}
   public void exitWindowingClause(Node node) {}

   public void enterAnalyticOverClause(Node node) {}
   public void exitAnalyticOverClause(Node node) {}

   public void enterModelExpression(Node node) {}
   public void exitModelExpression(Node node) {}

   public void enterCursorExpression(Node node) {}
   public void exitCursorExpression(Node node) {}

   public void enterConditionOrExpression(Node node) {}
   public void exitConditionOrExpression(Node node) {}

   public void enterConditionOrExpressionList(Node node) {}
   public void exitConditionOrExpressionList(Node node) {}

   public void enterCellReferenceArgumentsList(Node node) {}
   public void exitCellReferenceArgumentsList(Node node) {}

   public void enterCellReferenceArgument(Node node) {}
   public void exitCellReferenceArgument(Node node) {}

   public void enterPlaceHolderExpression(Node node) {}
   public void exitPlaceHolderExpression(Node node) {}

   public void enterTypeConstructorExpression(Node node) {}
   public void exitTypeConstructorExpression(Node node) {}

   public void enterPivotForClause(Node node) {}
   public void exitPivotForClause(Node node) {}

   public void enterAnyList(Node node) {}
   public void exitAnyList(Node node) {}

   public void enterSqlExpressionList(Node node) {}
   public void exitSqlExpressionList(Node node) {}

   public void enterParenthesesSqlExpressionList(Node node) {}
   public void exitParenthesesSqlExpressionList(Node node) {}

   public void enterPivoInExpressionList(Node node) {}
   public void exitPivoInExpressionList(Node node) {}

   public void enterAsOptionalAlias(Node node) {}
   public void exitAsOptionalAlias(Node node) {}

   public void enterPivotInExpression(Node node) {}
   public void exitPivotInExpression(Node node) {}

   public void enterPivotInClause(Node node) {}
   public void exitPivotInClause(Node node) {}

   public void enterPivotClause(Node node) {}
   public void exitPivotClause(Node node) {}

   public void enterIncludeNulls(Node node) {}
   public void exitIncludeNulls(Node node) {}

   public void enterExcludeNulls(Node node) {}
   public void exitExcludeNulls(Node node) {}

   public void enterUnpivotClause(Node node) {}
   public void exitUnpivotClause(Node node) {}

   public void enterUnpivotInClause(Node node) {}
   public void exitUnpivotInClause(Node node) {}

   public void enterUnpivotInElement(Node node) {}
   public void exitUnpivotInElement(Node node) {}

   public void enterUnpivotInClauseList(Node node) {}
   public void exitUnpivotInClauseList(Node node) {}

   public void enterSqlLiteralList(Node node) {}
   public void exitSqlLiteralList(Node node) {}

   public void enterParenthesesLiteralList(Node node) {}
   public void exitParenthesesLiteralList(Node node) {}

   public void enterParenthesesLiteralListList(Node node) {}
   public void exitParenthesesLiteralListList(Node node) {}

   public void enterSchema(Node node) {}
   public void exitSchema(Node node) {}

   public void enterTable(Node node) {}
   public void exitTable(Node node) {}

   public void enterObject(Node node) {}
   public void exitObject(Node node) {}

   public void enterColumn(Node node) {}
   public void exitColumn(Node node) {}

   public void enterSchemaObjectName(Node node) {}
   public void exitSchemaObjectName(Node node) {}

   public void enterColumnName(Node node) {}
   public void exitColumnName(Node node) {}

   public void enterColumnsList(Node node) {}
   public void exitColumnsList(Node node) {}

   public void enterOnlyQueryTableExpression(Node node) {}
   public void exitOnlyQueryTableExpression(Node node) {}

   public void enterQueryTableExpressionPivotClause(Node node) {}
   public void exitQueryTableExpressionPivotClause(Node node) {}

   public void enterQueryTableExpressionUnpivotClause(Node node) {}
   public void exitQueryTableExpressionUnpivotClause(Node node) {}

   public void enterQueryTableExpressionType(Node node) {}
   public void exitQueryTableExpressionType(Node node) {}

   public void enterTableReference(Node node) {}
   public void exitTableReference(Node node) {}

   public void enterVersionsBetween(Node node) {}
   public void exitVersionsBetween(Node node) {}

   public void enterFlashbackQueryClause(Node node) {}
   public void exitFlashbackQueryClause(Node node) {}

   public void enterEqualityOperator(Node node) {}
   public void exitEqualityOperator(Node node) {}

   public void enterRelationalOperator(Node node) {}
   public void exitRelationalOperator(Node node) {}

   public void enterSqlCondition(Node node) {}
   public void exitSqlCondition(Node node) {}

   public void enterOrCondition(Node node) {}
   public void exitOrCondition(Node node) {}

   public void enterParenthesesCondition(Node node) {}
   public void exitParenthesesCondition(Node node) {}

   public void enterSimpleCondition(Node node) {}
   public void exitSimpleCondition(Node node) {}

   public void enterExistsCondition(Node node) {}
   public void exitExistsCondition(Node node) {}

   public void enterNotCondition(Node node) {}
   public void exitNotCondition(Node node) {}

   public void enterNot(Node node) {}
   public void exitNot(Node node) {}

   public void enterIsConditionOption(Node node) {}
   public void exitIsConditionOption(Node node) {}

   public void enterIsCondition(Node node) {}
   public void exitIsCondition(Node node) {}

   public void enterPrior(Node node) {}
   public void exitPrior(Node node) {}

   public void enterRelationalCondition(Node node) {}
   public void exitRelationalCondition(Node node) {}

   public void enterGroupConditionCoverageType(Node node) {}
   public void exitGroupConditionCoverageType(Node node) {}

   public void enterEqualityGroupCondition(Node node) {}
   public void exitEqualityGroupCondition(Node node) {}

   public void enterAnyRelationalGroupCondition(Node node) {}
   public void exitAnyRelationalGroupCondition(Node node) {}

   public void enterRelationalGroupCondition(Node node) {}
   public void exitRelationalGroupCondition(Node node) {}

   public void enterinExpressionList(Node node) {}
   public void exitinExpressionList(Node node) {}

   public void enterInCondition(Node node) {}
   public void exitInCondition(Node node) {}

   public void enterIsASetCondition(Node node) {}
   public void exitIsASetCondition(Node node) {}

   public void enterObjectIs(Node node) {}
   public void exitObjectIs(Node node) {}

   public void enterIsAnyCondition(Node node) {}
   public void exitIsAnyCondition(Node node) {}

   public void enterIsEmptyCondition(Node node) {}
   public void exitIsEmptyCondition(Node node) {}

   public void enterIsOfTypeCondition(Node node) {}
   public void exitIsOfTypeCondition(Node node) {}

   public void enterOnly(Node node) {}
   public void exitOnly(Node node) {}

   public void enterIsTypeOfObject(Node node) {}
   public void exitIsTypeOfObject(Node node) {}

   public void enterIsOfTypeList(Node node) {}
   public void exitIsOfTypeList(Node node) {}

   public void enterIsPresentCondition(Node node) {}
   public void exitIsPresentCondition(Node node) {}

   public void enterLikeOperator(Node node) {}
   public void exitLikeOperator(Node node) {}

   public void enterEscape(Node node) {}
   public void exitEscape(Node node) {}

   public void enterLikeCondition(Node node) {}
   public void exitLikeCondition(Node node) {}

   public void enterMatchParam(Node node) {}
   public void exitMatchParam(Node node) {}

   public void enterRegexCondition(Node node) {}
   public void exitRegexCondition(Node node) {}

   public void enterMemberCondition(Node node) {}
   public void exitMemberCondition(Node node) {}

   public void enterBetweenCondition(Node node) {}
   public void exitBetweenCondition(Node node) {}

   public void enterSubMultiSetCondition(Node node) {}
   public void exitSubMultiSetCondition(Node node) {}

   public void enterCorrelationInteger(Node node) {}
   public void exitCorrelationInteger(Node node) {}

   public void enterEqualsPathCondition(Node node) {}
   public void exitEqualsPathCondition(Node node) {}

   public void enterUnderPathLevels(Node node) {}
   public void exitUnderPathLevels(Node node) {}

   public void enterUnderPathCondition(Node node) {}
   public void exitUnderPathCondition(Node node) {}

   public void enterIdentifierOrStringLiteral(Node node) {}
   public void exitIdentifierOrStringLiteral(Node node) {}

   public void enterOnCondition(Node node) {}
   public void exitOnCondition(Node node) {}

   public void enterUsing(Node node) {}
   public void exitUsing(Node node) {}

   public void enterInnerCrossJoinClause(Node node) {}
   public void exitInnerCrossJoinClause(Node node) {}

   public void enterNaturalOuterJoin(Node node) {}
   public void exitNaturalOuterJoin(Node node) {}

   public void enterNormalOuterJoin(Node node) {}
   public void exitNormalOuterJoin(Node node) {}

   public void enterOuterJoinClause(Node node) {}
   public void exitOuterJoinClause(Node node) {}

   public void enterJoinClauseType(Node node) {}
   public void exitJoinClauseType(Node node) {}

   public void enterJoinClause(Node node) {}
   public void exitJoinClause(Node node) {}

   public void enterOuterJoinType(Node node) {}
   public void exitOuterJoinType(Node node) {}

   public void enterQueryPartitionClause(Node node) {}
   public void exitQueryPartitionClause(Node node) {}

   public void enterFromArgument(Node node) {}
   public void exitFromArgument(Node node) {}

   public void enterFromClause(Node node) {}
   public void exitFromClause(Node node) {}

   public void enterCurrentOf(Node node) {}
   public void exitCurrentOf(Node node) {}

   public void enterWhereClause(Node node) {}
   public void exitWhereClause(Node node) {}

   public void enterBulkCollect(Node node) {}
   public void exitBulkCollect(Node node) {}

   public void enterSelectIntoClause(Node node) {}
   public void exitSelectIntoClause(Node node) {}

   public void enterDistinct(Node node) {}
   public void exitDistinct(Node node) {}

   public void enterUnionType(Node node) {}
   public void exitUnionType(Node node) {}

   public void enterUnionClause(Node node) {}
   public void exitUnionClause(Node node) {}

   public void enterQueryBlock(Node node) {}
   public void exitQueryBlock(Node node) {}

   public void enterEnclosedSubquery(Node node) {}
   public void exitEnclosedSubquery(Node node) {}

   public void enterSubquery(Node node) {}
   public void exitSubquery(Node node) {}

   public void enterNoCycleOption(Node node) {}
   public void exitNoCycleOption(Node node) {}

   public void enterStartWithCondition(Node node) {}
   public void exitStartWithCondition(Node node) {}

   public void enterConnectByCondition(Node node) {}
   public void exitConnectByCondition(Node node) {}

   public void enterConnectBy(Node node) {}
   public void exitConnectBy(Node node) {}

   public void enterStartWith(Node node) {}
   public void exitStartWith(Node node) {}

   public void enterHierarchicalQueryClause(Node node) {}
   public void exitHierarchicalQueryClause(Node node) {}

   public void enterGroupByArgument(Node node) {}
   public void exitGroupByArgument(Node node) {}

   public void enterGroupByArguments(Node node) {}
   public void exitGroupByArguments(Node node) {}

   public void enterRollupCubeClause(Node node) {}
   public void exitRollupCubeClause(Node node) {}

   public void enterGroupingExpressionList(Node node) {}
   public void exitGroupingExpressionList(Node node) {}

   public void enterGroupingSetsClause(Node node) {}
   public void exitGroupingSetsClause(Node node) {}

   public void enterGroupingSetsClauseArgument(Node node) {}
   public void exitGroupingSetsClauseArgument(Node node) {}

   public void enterGroupingSetsClauseArguments(Node node) {}
   public void exitGroupingSetsClauseArguments(Node node) {}

   public void enterGroupByClause(Node node) {}
   public void exitGroupByClause(Node node) {}

   public void enterHavingClause(Node node) {}
   public void exitHavingClause(Node node) {}

   public void enterModelClause(Node node) {}
   public void exitModelClause(Node node) {}

   public void enterCellReferenceOptions(Node node) {}
   public void exitCellReferenceOptions(Node node) {}

   public void enterReturnRowsClause(Node node) {}
   public void exitReturnRowsClause(Node node) {}

   public void enterReferenceModel(Node node) {}
   public void exitReferenceModel(Node node) {}

   public void enterModelColumnPartition(Node node) {}
   public void exitModelColumnPartition(Node node) {}

   public void enterModelColumnClause(Node node) {}
   public void exitModelColumnClause(Node node) {}

   public void enterModelColumnList(Node node) {}
   public void exitModelColumnList(Node node) {}

   public void enterModelColumn(Node node) {}
   public void exitModelColumn(Node node) {}

   public void enterMainModel(Node node) {}
   public void exitMainModel(Node node) {}

   public void enterModelRulesUpdate(Node node) {}
   public void exitModelRulesUpdate(Node node) {}

   public void enterUntilCondition(Node node) {}
   public void exitUntilCondition(Node node) {}

   public void enterModelRulesIterate(Node node) {}
   public void exitModelRulesIterate(Node node) {}

   public void enterModelRulesClause(Node node) {}
   public void exitModelRulesClause(Node node) {}

   public void enterModelRulesClauseCellAssignmentList(Node node) {}
   public void exitModelRulesClauseCellAssignmentList(Node node) {}

   public void enterModelRulesClauseCellAssignment(Node node) {}
   public void exitModelRulesClauseCellAssignment(Node node) {}

   public void enterCellAssignment(Node node) {}
   public void exitCellAssignment(Node node) {}

   public void enterCellAssignmentArgumentsList(Node node) {}
   public void exitCellAssignmentArgumentsList(Node node) {}

   public void enterCellAssignmentArgument(Node node) {}
   public void exitCellAssignmentArgument(Node node) {}

   public void enterForIn(Node node) {}
   public void exitForIn(Node node) {}

   public void enterLikeString(Node node) {}
   public void exitLikeString(Node node) {}

   public void enterForLike(Node node) {}
   public void exitForLike(Node node) {}

   public void enterSingleColumnForLoop(Node node) {}
   public void exitSingleColumnForLoop(Node node) {}

   public void enterMultiColumnForLoop(Node node) {}
   public void exitMultiColumnForLoop(Node node) {}

   public void enterSqlLiteral(Node node) {}
   public void exitSqlLiteral(Node node) {}

   public void enterNullLiteral(Node node) {}
   public void exitNullLiteral(Node node) {}

   public void enterDateLiteral(Node node) {}
   public void exitDateLiteral(Node node) {}

   public void enterYear(Node node) {}
   public void exitYear(Node node) {}

   public void enterMonth(Node node) {}
   public void exitMonth(Node node) {}

   public void enterDay(Node node) {}
   public void exitDay(Node node) {}

   public void enterHour(Node node) {}
   public void exitHour(Node node) {}

   public void enterMinute(Node node) {}
   public void exitMinute(Node node) {}

   public void enterSecond(Node node) {}
   public void exitSecond(Node node) {}

   public void enterTimestampLiteral(Node node) {}
   public void exitTimestampLiteral(Node node) {}

   public void enterStringLiteral(Node node) {}
   public void exitStringLiteral(Node node) {}

   public void enterString(Node node) {}
   public void exitString(Node node) {}

   public void enterOrder(Node node) {}
   public void exitOrder(Node node) {}

   public void enterNullsOrder(Node node) {}
   public void exitNullsOrder(Node node) {}

   public void enterOrderByArg(Node node) {}
   public void exitOrderByArg(Node node) {}

   public void enterOrderByArgument(Node node) {}
   public void exitOrderByArgument(Node node) {}

   public void enterOrderByArguments(Node node) {}
   public void exitOrderByArguments(Node node) {}

   public void enterOrderByClause(Node node) {}
   public void exitOrderByClause(Node node) {}

   public void enterSubqueryFactoringSource(Node node) {}
   public void exitSubqueryFactoringSource(Node node) {}

   public void enterSubqueryFactoringClause(Node node) {}
   public void exitSubqueryFactoringClause(Node node) {}

   public void enterWaitClause(Node node) {}
   public void exitWaitClause(Node node) {}

   public void enterForUpdateClause(Node node) {}
   public void exitForUpdateClause(Node node) {}

   public void enterOnlyDmlTableExpresionClause(Node node) {}
   public void exitOnlyDmlTableExpresionClause(Node node) {}

   public void enterUpdateStatement(Node node) {}
   public void exitUpdateStatement(Node node) {}

   public void enterPartitionName(Node node) {}
   public void exitPartitionName(Node node) {}

   public void enterPartitionKey(Node node) {}
   public void exitPartitionKey(Node node) {}

   public void enterTablePartitionName(Node node) {}
   public void exitTablePartitionName(Node node) {}

   public void enterTableSubPartitionName(Node node) {}
   public void exitTableSubPartitionName(Node node) {}

   public void enterSubqueryDmlExpression(Node node) {}
   public void exitSubqueryDmlExpression(Node node) {}

   public void enterDmlTableExpressionClause(Node node) {}
   public void exitDmlTableExpressionClause(Node node) {}

   public void enterUpdateSetClause(Node node) {}
   public void exitUpdateSetClause(Node node) {}

   public void enterAlias(Node node) {}
   public void exitAlias(Node node) {}

   public void enterObjectSetValue(Node node) {}
   public void exitObjectSetValue(Node node) {}

   public void enterColumnsGroupSetValue(Node node) {}
   public void exitColumnsGroupSetValue(Node node) {}

   public void enterSingleColumnSetValue(Node node) {}
   public void exitSingleColumnSetValue(Node node) {}

   public void enterColumnSetValue(Node node) {}
   public void exitColumnSetValue(Node node) {}

   public void enterColumnSetValueList(Node node) {}
   public void exitColumnSetValueList(Node node) {}

   public void enterReturningClause(Node node) {}
   public void exitReturningClause(Node node) {}

   public void enterBindVariable(Node node) {}
   public void exitBindVariable(Node node) {}

   public void enterReturnIntoVariable(Node node) {}
   public void exitReturnIntoVariable(Node node) {}

   public void enterReturnIntoVariablesList(Node node) {}
   public void exitReturnIntoVariablesList(Node node) {}

   public void enterInsertStatement(Node node) {}
   public void exitInsertStatement(Node node) {}

   public void enterValues(Node node) {}
   public void exitValues(Node node) {}

   public void enterSingleInsertSource(Node node) {}
   public void exitSingleInsertSource(Node node) {}

   public void enterSingleTableInsert(Node node) {}
   public void exitSingleTableInsert(Node node) {}

   public void enterInsertInto(Node node) {}
   public void exitInsertInto(Node node) {}

   public void enterMultiIntoClause(Node node) {}
   public void exitMultiIntoClause(Node node) {}

   public void enterMultiTableInsert(Node node) {}
   public void exitMultiTableInsert(Node node) {}

   public void enterInsertIntoValuesClause(Node node) {}
   public void exitInsertIntoValuesClause(Node node) {}

   public void enterInsertIntoValuesClauseList(Node node) {}
   public void exitInsertIntoValuesClauseList(Node node) {}

   public void enterConditionalInsertWhen(Node node) {}
   public void exitConditionalInsertWhen(Node node) {}

   public void enterConditionalInsertElse(Node node) {}
   public void exitConditionalInsertElse(Node node) {}

   public void enterConditionalInsertWhenList(Node node) {}
   public void exitConditionalInsertWhenList(Node node) {}

   public void enterConditionalInsertClause(Node node) {}
   public void exitConditionalInsertClause(Node node) {}

   public void enterInsertIntoClause(Node node) {}
   public void exitInsertIntoClause(Node node) {}

   public void enterValueClauseData(Node node) {}
   public void exitValueClauseData(Node node) {}

   public void enterValuesClauseList(Node node) {}
   public void exitValuesClauseList(Node node) {}

   public void enterValuesClause(Node node) {}
   public void exitValuesClause(Node node) {}

   public void enterIntoTable(Node node) {}
   public void exitIntoTable(Node node) {}

   public void enterRejectLimit(Node node) {}
   public void exitRejectLimit(Node node) {}

   public void enterErrorLogingClause(Node node) {}
   public void exitErrorLogingClause(Node node) {}

   public void enterDeleteStatement(Node node) {}
   public void exitDeleteStatement(Node node) {}

   public void enterUnsignedNumber(Node node) {}
   public void exitUnsignedNumber(Node node) {}

   public void enterSign(Node node) {}
   public void exitSign(Node node) {}

   public void enterNumberLiteral(Node node) {}
   public void exitNumberLiteral(Node node) {}

   public void enterExponent(Node node) {}
   public void exitExponent(Node node) {}

   public void enterIntegerLiteral(Node node) {}
   public void exitIntegerLiteral(Node node) {}

   public void enterSize(Node node) {}
   public void exitSize(Node node) {}

   public void enterCharSetDefinition(Node node) {}
   public void exitCharSetDefinition(Node node) {}

   public void enterCharSetAttr(Node node) {}
   public void exitCharSetAttr(Node node) {}

   public void enterCharSize(Node node) {}
   public void exitCharSize(Node node) {}

   public void enterVarChar2(Node node) {}
   public void exitVarChar2(Node node) {}

   public void enterVarChar(Node node) {}
   public void exitVarChar(Node node) {}

   public void enterChar(Node node) {}
   public void exitChar(Node node) {}

   public void enterPrecision(Node node) {}
   public void exitPrecision(Node node) {}

   public void enterNumberSize(Node node) {}
   public void exitNumberSize(Node node) {}

   public void enterNumber(Node node) {}
   public void exitNumber(Node node) {}

   public void enterFloat(Node node) {}
   public void exitFloat(Node node) {}

   public void enterTimestamp(Node node) {}
   public void exitTimestamp(Node node) {}

   public void enterIntervalDayToSecondSpec(Node node) {}
   public void exitIntervalDayToSecondSpec(Node node) {}

   public void enterIntervalDayToSecondLeadingPrecision(Node node) {}
   public void exitIntervalDayToSecondLeadingPrecision(Node node) {}

   public void enterIntervalDayToSecondLiteral(Node node) {}
   public void exitIntervalDayToSecondLiteral(Node node) {}

   public void enterIntervalDayToSecond(Node node) {}
   public void exitIntervalDayToSecond(Node node) {}

   public void enterIntervalYearToMonthLeadingTrailing(Node node) {}
   public void exitIntervalYearToMonthLeadingTrailing(Node node) {}

   public void enterIntervalYearToMonthLiteral(Node node) {}
   public void exitIntervalYearToMonthLiteral(Node node) {}

   public void enterIntervalYearToMonth(Node node) {}
   public void exitIntervalYearToMonth(Node node) {}

   public void enterTime(Node node) {}
   public void exitTime(Node node) {}

   public void enterRefXml(Node node) {}
   public void exitRefXml(Node node) {}

   public void enterNChar(Node node) {}
   public void exitNChar(Node node) {}

   public void enterNVarChar2(Node node) {}
   public void exitNVarChar2(Node node) {}

   public void enterLongRaw(Node node) {}
   public void exitLongRaw(Node node) {}

   public void enterRaw(Node node) {}
   public void exitRaw(Node node) {}

   public void enterCLob(Node node) {}
   public void exitCLob(Node node) {}

   public void enterURowId(Node node) {}
   public void exitURowId(Node node) {}

   public void enterBinaryFloat(Node node) {}
   public void exitBinaryFloat(Node node) {}

   public void enterBinaryDouble(Node node) {}
   public void exitBinaryDouble(Node node) {}

   public void enterDate(Node node) {}
   public void exitDate(Node node) {}

   public void enterBLob(Node node) {}
   public void exitBLob(Node node) {}

   public void enterNCLob(Node node) {}
   public void exitNCLob(Node node) {}

   public void enterBFile(Node node) {}
   public void exitBFile(Node node) {}

   public void enterRowId(Node node) {}
   public void exitRowId(Node node) {}

   public void enterSqlDataType(Node node) {}
   public void exitSqlDataType(Node node) {}

   public void enterParameters(Node node) {}
   public void exitParameters(Node node) {}

   public void enterQualifiedIdentifierRemote(Node node) {}
   public void exitQualifiedIdentifierRemote(Node node) {}

   public void enterIdentifierRemote(Node node) {}
   public void exitIdentifierRemote(Node node) {}

   public void enterSqlAttributes(Node node) {}
   public void exitSqlAttributes(Node node) {}

   public void enterQualifiedIdentifier(Node node) {}
   public void exitQualifiedIdentifier(Node node) {}

   public void enterSqlAnySimpleIdentifier(Node node) {}
   public void exitSqlAnySimpleIdentifier(Node node) {}

   public void enterParameterizedIdentifier(Node node) {}
   public void exitParameterizedIdentifier(Node node) {}

   public void enterSqlSimpleIdentifier(Node node) {}
   public void exitSqlSimpleIdentifier(Node node) {}

   public void enterSqlObjectIdentifier(Node node) {}
   public void exitSqlObjectIdentifier(Node node) {}

   public void enterSqlIdentifier(Node node) {}
   public void exitSqlIdentifier(Node node) {}

   public void enterIdentifier(Node node) {}
   public void exitIdentifier(Node node) {}

   public void enterSqlAnyIdentifier(Node node) {}
   public void exitSqlAnyIdentifier(Node node) {}

   public void enterTestNoAlpha(Node node) {}
   public void exitTestNoAlpha(Node node) {}

   public void enterOptionalSpacing(Node node) {}
   public void exitOptionalSpacing(Node node) {}

   public void enterSqlObjectIdentifierList(Node node) {}
   public void exitSqlObjectIdentifierList(Node node) {}

   public void enterSqlIdentifierList(Node node) {}
   public void exitSqlIdentifierList(Node node) {}

   public void enterSpaces(Node node) {}
   public void exitSpaces(Node node) {}

   public void enterBlockComment(Node node) {}
   public void exitBlockComment(Node node) {}

   public void enterLineComment(Node node) {}
   public void exitLineComment(Node node) {}

   public void enterPlSqlProgram(Node node) {}
   public void exitPlSqlProgram(Node node) {}

   public void enterPlSqlSource(Node node) {}
   public void exitPlSqlSource(Node node) {}

   public void enterPlSqlExpression(Node node) {}
   public void exitPlSqlExpression(Node node) {}

   public void enterOrExpression(Node node) {}
   public void exitOrExpression(Node node) {}

   public void enterRelationalExpression(Node node) {}
   public void exitRelationalExpression(Node node) {}

   public void enterLogicalExpression(Node node) {}
   public void exitLogicalExpression(Node node) {}

   public void enterInExpression(Node node) {}
   public void exitInExpression(Node node) {}

   public void enterBetweenExpression(Node node) {}
   public void exitBetweenExpression(Node node) {}

   public void enterLikeExpression(Node node) {}
   public void exitLikeExpression(Node node) {}

   public void enterIsNullExpression(Node node) {}
   public void exitIsNullExpression(Node node) {}

   public void enterNotExpression(Node node) {}
   public void exitNotExpression(Node node) {}

   public void enterPlSqlMathExpression(Node node) {}
   public void exitPlSqlMathExpression(Node node) {}

   public void enterPlSqlUnaryExpression(Node node) {}
   public void exitPlSqlUnaryExpression(Node node) {}

   public void enterNumericExpression(Node node) {}
   public void exitNumericExpression(Node node) {}

   public void enterPlSqlParenthesesExpression(Node node) {}
   public void exitPlSqlParenthesesExpression(Node node) {}

   public void enterSqlCursorAttribute(Node node) {}
   public void exitSqlCursorAttribute(Node node) {}

   public void enterPlSqlObjectCursor(Node node) {}
   public void exitPlSqlObjectCursor(Node node) {}

   public void enterPlSqlObjectCollection(Node node) {}
   public void exitPlSqlObjectCollection(Node node) {}

   public void enterHostVariableCursor(Node node) {}
   public void exitHostVariableCursor(Node node) {}

   public void enterPlSqlAtomicExpression(Node node) {}
   public void exitPlSqlAtomicExpression(Node node) {}

   public void enterCaseExpressionElse(Node node) {}
   public void exitCaseExpressionElse(Node node) {}

   public void enterCaseExpressionWhen(Node node) {}
   public void exitCaseExpressionWhen(Node node) {}

   public void enterCaseExpressionWhenList(Node node) {}
   public void exitCaseExpressionWhenList(Node node) {}

   public void enterPlSqlCaseExpression(Node node) {}
   public void exitPlSqlCaseExpression(Node node) {}

   public void enterCollectionAttribute(Node node) {}
   public void exitCollectionAttribute(Node node) {}

   public void enterCursorAttribute(Node node) {}
   public void exitCursorAttribute(Node node) {}

   public void enterIsAsKeyword(Node node) {}
   public void exitIsAsKeyword(Node node) {}

   public void enterDeclarationSection(Node node) {}
   public void exitDeclarationSection(Node node) {}

   public void enterEndBlock(Node node) {}
   public void exitEndBlock(Node node) {}

   public void enterPackageBody(Node node) {}
   public void exitPackageBody(Node node) {}

   public void enterCreatePackageBody(Node node) {}
   public void exitCreatePackageBody(Node node) {}

   public void enterAuthIdCurrentUser(Node node) {}
   public void exitAuthIdCurrentUser(Node node) {}

   public void enterAuthIdDefiner(Node node) {}
   public void exitAuthIdDefiner(Node node) {}

   public void enterInvokerRights(Node node) {}
   public void exitInvokerRights(Node node) {}

   public void enterCreatePackage(Node node) {}
   public void exitCreatePackage(Node node) {}

   public void enterExternalCParameter(Node node) {}
   public void exitExternalCParameter(Node node) {}

   public void enterExternalCParametersDeclaration(Node node) {}
   public void exitExternalCParametersDeclaration(Node node) {}

   public void enterCallJavaSpec(Node node) {}
   public void exitCallJavaSpec(Node node) {}

   public void enterPlSqlIdentifierList(Node node) {}
   public void exitPlSqlIdentifierList(Node node) {}

   public void enterCallCSpec(Node node) {}
   public void exitCallCSpec(Node node) {}

   public void enterCallSpec(Node node) {}
   public void exitCallSpec(Node node) {}

   public void enterPragmaOrStatement(Node node) {}
   public void exitPragmaOrStatement(Node node) {}

   public void enterPlSqlBodyStatements(Node node) {}
   public void exitPlSqlBodyStatements(Node node) {}

   public void enterPlSqlBody(Node node) {}
   public void exitPlSqlBody(Node node) {}

   public void enterFunctionBody(Node node) {}
   public void exitFunctionBody(Node node) {}

   public void enterCallSpecOrFunctionBody(Node node) {}
   public void exitCallSpecOrFunctionBody(Node node) {}

   public void enterCreateFunction(Node node) {}
   public void exitCreateFunction(Node node) {}

   public void enterFunctionDefinition(Node node) {}
   public void exitFunctionDefinition(Node node) {}

   public void enterCreateProcedure(Node node) {}
   public void exitCreateProcedure(Node node) {}

   public void enterProcedureDefinition(Node node) {}
   public void exitProcedureDefinition(Node node) {}

   public void enterCreateOrReplace(Node node) {}
   public void exitCreateOrReplace(Node node) {}

   public void enterItemList1First(Node node) {}
   public void exitItemList1First(Node node) {}

   public void enterItemList1Second(Node node) {}
   public void exitItemList1Second(Node node) {}

   public void enterItemList1(Node node) {}
   public void exitItemList1(Node node) {}

   public void enterItemList2First(Node node) {}
   public void exitItemList2First(Node node) {}

   public void enterItemList2Second(Node node) {}
   public void exitItemList2Second(Node node) {}

   public void enterItemList2(Node node) {}
   public void exitItemList2(Node node) {}

   public void enterDeclareSection(Node node) {}
   public void exitDeclareSection(Node node) {}

   public void enterTypeDefinition(Node node) {}
   public void exitTypeDefinition(Node node) {}

   public void enterNull(Node node) {}
   public void exitNull(Node node) {}

   public void enterNotNull(Node node) {}
   public void exitNotNull(Node node) {}

   public void enterNullable(Node node) {}
   public void exitNullable(Node node) {}

   public void enterSubtypeDefinition(Node node) {}
   public void exitSubtypeDefinition(Node node) {}

   public void enterRecordTypeDefinition(Node node) {}
   public void exitRecordTypeDefinition(Node node) {}

   public void enterDefaultOperator(Node node) {}
   public void exitDefaultOperator(Node node) {}

   public void enterDefaultValue(Node node) {}
   public void exitDefaultValue(Node node) {}

   public void enterRecordFieldDeclaration(Node node) {}
   public void exitRecordFieldDeclaration(Node node) {}

   public void enterCollectionTypeDefinition(Node node) {}
   public void exitCollectionTypeDefinition(Node node) {}

   public void enterIndexBy(Node node) {}
   public void exitIndexBy(Node node) {}

   public void enterAssociativeArrayTypeDefinition(Node node) {}
   public void exitAssociativeArrayTypeDefinition(Node node) {}

   public void enterVarrayTypeDefinition(Node node) {}
   public void exitVarrayTypeDefinition(Node node) {}

   public void enterNestedTableTypeDefinition(Node node) {}
   public void exitNestedTableTypeDefinition(Node node) {}

   public void enterRefCursorTypeDefinition(Node node) {}
   public void exitRefCursorTypeDefinition(Node node) {}

   public void enterNumeric(Node node) {}
   public void exitNumeric(Node node) {}

   public void enterSmallIntPrecision(Node node) {}
   public void exitSmallIntPrecision(Node node) {}

   public void enterCharacter(Node node) {}
   public void exitCharacter(Node node) {}

   public void enterNVarChar(Node node) {}
   public void exitNVarChar(Node node) {}

   public void enterNationalCharacter(Node node) {}
   public void exitNationalCharacter(Node node) {}

   public void enterInteger(Node node) {}
   public void exitInteger(Node node) {}

   public void enterInt(Node node) {}
   public void exitInt(Node node) {}

   public void enterSmallInt(Node node) {}
   public void exitSmallInt(Node node) {}

   public void enterReal(Node node) {}
   public void exitReal(Node node) {}

   public void enterBinaryInteger(Node node) {}
   public void exitBinaryInteger(Node node) {}

   public void enterNatural(Node node) {}
   public void exitNatural(Node node) {}

   public void enterPositive(Node node) {}
   public void exitPositive(Node node) {}

   public void enterBoolean(Node node) {}
   public void exitBoolean(Node node) {}

   public void enterPls_Integer(Node node) {}
   public void exitPls_Integer(Node node) {}

   public void enterPlSqlDataType(Node node) {}
   public void exitPlSqlDataType(Node node) {}

   public void enterRowType(Node node) {}
   public void exitRowType(Node node) {}

   public void enterType(Node node) {}
   public void exitType(Node node) {}

   public void enterCursorReturnType(Node node) {}
   public void exitCursorReturnType(Node node) {}

   public void enterCursorRef(Node node) {}
   public void exitCursorRef(Node node) {}

   public void enterUserTypeAttribute(Node node) {}
   public void exitUserTypeAttribute(Node node) {}

   public void enterUserType(Node node) {}
   public void exitUserType(Node node) {}

   public void enterTypeSpec(Node node) {}
   public void exitTypeSpec(Node node) {}

   public void enterParenthesesParametersDeclaration(Node node) {}
   public void exitParenthesesParametersDeclaration(Node node) {}

   public void enterOut(Node node) {}
   public void exitOut(Node node) {}

   public void enterParameterDeclaration(Node node) {}
   public void exitParameterDeclaration(Node node) {}

   public void enterCursorDeclaration(Node node) {}
   public void exitCursorDeclaration(Node node) {}

   public void enterItemDeclaration(Node node) {}
   public void exitItemDeclaration(Node node) {}

   public void enterExceptionDeclaration(Node node) {}
   public void exitExceptionDeclaration(Node node) {}

   public void enterConstantDeclaration(Node node) {}
   public void exitConstantDeclaration(Node node) {}

   public void enterVariableDeclaration(Node node) {}
   public void exitVariableDeclaration(Node node) {}

   public void enterResultCache(Node node) {}
   public void exitResultCache(Node node) {}

   public void enterFunctionDeclaration(Node node) {}
   public void exitFunctionDeclaration(Node node) {}

   public void enterFunctionModifier(Node node) {}
   public void exitFunctionModifier(Node node) {}

   public void enterProcedureDeclaration(Node node) {}
   public void exitProcedureDeclaration(Node node) {}

   public void enterPragma(Node node) {}
   public void exitPragma(Node node) {}

   public void enterPragmaParams(Node node) {}
   public void exitPragmaParams(Node node) {}

   public void enterPragmaParam(Node node) {}
   public void exitPragmaParam(Node node) {}

   public void enterLabel(Node node) {}
   public void exitLabel(Node node) {}

   public void enterLabels(Node node) {}
   public void exitLabels(Node node) {}

   public void enterPlSqlStatement(Node node) {}
   public void exitPlSqlStatement(Node node) {}

   public void enterHostVariable(Node node) {}
   public void exitHostVariable(Node node) {}

   public void enterLeftValue(Node node) {}
   public void exitLeftValue(Node node) {}

   public void enterAssignStatement(Node node) {}
   public void exitAssignStatement(Node node) {}

   public void enterNamedParameter(Node node) {}
   public void exitNamedParameter(Node node) {}

   public void enterCaseStatementWhen(Node node) {}
   public void exitCaseStatementWhen(Node node) {}

   public void enterCaseStatementWhenList(Node node) {}
   public void exitCaseStatementWhenList(Node node) {}

   public void enterCaseStatementElse(Node node) {}
   public void exitCaseStatementElse(Node node) {}

   public void enterCaseStatement(Node node) {}
   public void exitCaseStatement(Node node) {}

   public void enterContinueStatement(Node node) {}
   public void exitContinueStatement(Node node) {}

   public void enterCloseStatement(Node node) {}
   public void exitCloseStatement(Node node) {}

   public void enterBasicLoopStatement(Node node) {}
   public void exitBasicLoopStatement(Node node) {}

   public void enterExecuteImediateOptions(Node node) {}
   public void exitExecuteImediateOptions(Node node) {}

   public void enterExecuteImmediateStatement(Node node) {}
   public void exitExecuteImmediateStatement(Node node) {}

   public void enterIntoClause(Node node) {}
   public void exitIntoClause(Node node) {}

   public void enterBulkCollectIntoClause(Node node) {}
   public void exitBulkCollectIntoClause(Node node) {}

   public void enterUsingParameter(Node node) {}
   public void exitUsingParameter(Node node) {}

   public void enterUsingClause(Node node) {}
   public void exitUsingClause(Node node) {}

   public void enterDynamicReturningClause(Node node) {}
   public void exitDynamicReturningClause(Node node) {}

   public void enterExitStatement(Node node) {}
   public void exitExitStatement(Node node) {}

   public void enterLimit(Node node) {}
   public void exitLimit(Node node) {}

   public void enterFetchStatement(Node node) {}
   public void exitFetchStatement(Node node) {}

   public void enterForLoopStatement(Node node) {}
   public void exitForLoopStatement(Node node) {}

   public void enterRangeBounds(Node node) {}
   public void exitRangeBounds(Node node) {}

   public void enterCursorBounds(Node node) {}
   public void exitCursorBounds(Node node) {}

   public void enterSelectBounds(Node node) {}
   public void exitSelectBounds(Node node) {}

   public void enterForBoundsClause(Node node) {}
   public void exitForBoundsClause(Node node) {}

   public void enterForAllStatement(Node node) {}
   public void exitForAllStatement(Node node) {}

   public void enterRange(Node node) {}
   public void exitRange(Node node) {}

   public void enterBetweenBounds(Node node) {}
   public void exitBetweenBounds(Node node) {}

   public void enterIndicesOfCollection(Node node) {}
   public void exitIndicesOfCollection(Node node) {}

   public void enterValuesOfIndexCollection(Node node) {}
   public void exitValuesOfIndexCollection(Node node) {}

   public void enterForAllBoundsClause(Node node) {}
   public void exitForAllBoundsClause(Node node) {}

   public void enterGotoStatement(Node node) {}
   public void exitGotoStatement(Node node) {}

   public void enterPlSqlStatements(Node node) {}
   public void exitPlSqlStatements(Node node) {}

   public void enterElsIf(Node node) {}
   public void exitElsIf(Node node) {}

   public void enterElsIfList(Node node) {}
   public void exitElsIfList(Node node) {}

   public void enterElseBody(Node node) {}
   public void exitElseBody(Node node) {}

   public void enterElse(Node node) {}
   public void exitElse(Node node) {}

   public void enterIfStatement(Node node) {}
   public void exitIfStatement(Node node) {}

   public void enterNullStatement(Node node) {}
   public void exitNullStatement(Node node) {}

   public void enterCursorSource(Node node) {}
   public void exitCursorSource(Node node) {}

   public void enterCursorUsingClause(Node node) {}
   public void exitCursorUsingClause(Node node) {}

   public void enterForCursorSource(Node node) {}
   public void exitForCursorSource(Node node) {}

   public void enterForCursor(Node node) {}
   public void exitForCursor(Node node) {}

   public void enterOpenStatement(Node node) {}
   public void exitOpenStatement(Node node) {}

   public void enterAnonymousPlSqlBlock(Node node) {}
   public void exitAnonymousPlSqlBlock(Node node) {}

   public void enterPlSqlBlock(Node node) {}
   public void exitPlSqlBlock(Node node) {}

   public void enterRaiseStatement(Node node) {}
   public void exitRaiseStatement(Node node) {}

   public void enterReturnStatement(Node node) {}
   public void exitReturnStatement(Node node) {}

   public void enterWhileLoopStatement(Node node) {}
   public void exitWhileLoopStatement(Node node) {}

   public void enterPipeRowStatement(Node node) {}
   public void exitPipeRowStatement(Node node) {}

   public void enterSqlStatement(Node node) {}
   public void exitSqlStatement(Node node) {}

   public void enterPlSqlExpressionList(Node node) {}
   public void exitPlSqlExpressionList(Node node) {}

   public void enterOrHandlerIdentifier(Node node) {}
   public void exitOrHandlerIdentifier(Node node) {}

   public void enterMultipleHandlerIdentifier(Node node) {}
   public void exitMultipleHandlerIdentifier(Node node) {}

   public void enterHandlerIdentifiers(Node node) {}
   public void exitHandlerIdentifiers(Node node) {}

   public void enterExceptionHandler(Node node) {}
   public void exitExceptionHandler(Node node) {}

   public void enterExceptionBlock(Node node) {}
   public void exitExceptionBlock(Node node) {}

   public void enterParametersDeclaration(Node node) {}
   public void exitParametersDeclaration(Node node) {}

   public void enterReturnType(Node node) {}
   public void exitReturnType(Node node) {}

   public void enterFunctionHeading(Node node) {}
   public void exitFunctionHeading(Node node) {}

   public void enterProcedureHeading(Node node) {}
   public void exitProcedureHeading(Node node) {}

   public void enterBooleanLiteral(Node node) {}
   public void exitBooleanLiteral(Node node) {}

   public void enterPlSqlLiteral(Node node) {}
   public void exitPlSqlLiteral(Node node) {}

   public void enterPlSqlAttributes(Node node) {}
   public void exitPlSqlAttributes(Node node) {}

   public void enterPlSqlAnySimpleIdentifier(Node node) {}
   public void exitPlSqlAnySimpleIdentifier(Node node) {}

   public void enterPlSqlSimpleIdentifier(Node node) {}
   public void exitPlSqlSimpleIdentifier(Node node) {}

   public void enterPlSqlObjectIdentifier(Node node) {}
   public void exitPlSqlObjectIdentifier(Node node) {}

   public void enterPlSqlIdentifier(Node node) {}
   public void exitPlSqlIdentifier(Node node) {}

   public void enterPlSqlAnyIdentifier(Node node) {}
   public void exitPlSqlAnyIdentifier(Node node) {}

   public void enterScript(Node node) {}
   public void exitScript(Node node) {}

   public void enterMultiplesSQLSentence(Node node) {}
   public void exitMultiplesSQLSentence(Node node) {}

   public void enterSQLSentence(Node node) {}
   public void exitSQLSentence(Node node) {}}
